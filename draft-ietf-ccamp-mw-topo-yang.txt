



ccamp                                                         J. Ahlberg
Internet-Draft                                              S. Mansfield
Intended status: Standards Track                                Ericsson
Expires: 18 July 2023                                              M. Ye
                                                                 I. Busi
                                                     Huawei Technologies
                                                                   X. Li
                                                 NEC Laboratories Europe
                                                            D. Spreafico
                                                              Nokia - IT
                                                         14 January 2023


                A YANG Data Model for Microwave Topology
                  draft-ietf-ccamp-mw-topo-yang-latest

Abstract

   This document defines a YANG data model to describe microwave/
   millimeter radio links in a network topology.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Source for this draft and an issue tracker can be found at
   https://github.com/ietf-ccamp-wg/draft-ietf-ccamp-mw-topo-yang.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 18 July 2023.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Terminology and Definitions
     1.2.  Tree Structure
   2.  Requirements Language
   3.  Microwave Topology YANG Data Model
     3.1.  YANG Tree
     3.2.  Relationship between radio links and carriers
     3.3.  Relationship with client topology model
     3.4.  Applicability of the Data Model for Traffic Engineering
           (TE) Topologies
     3.5.  Model applicability to other technology
     3.6.  Microwave Topology YANG Module
   4.  Security Considerations
   5.  IANA Considerations
   6.  References
     6.1.  Normative References
     6.2.  Informative References
   Appendix A.  Examples of the application of the Microwave Topology
           Model
     A.1.  A tree for a complete Microwave Topology Model
     A.2.  A topology with single microwave radio link
   Authors' Addresses

1.  Introduction

   This document defines a YANG data model to describe topologies of
   microwave/millimeter wave (hereafter microwave is used to simplify
   the text).  The YANG data model describes radio links, supporting
   carrier(s) and the associated termination points.  A carrier is a
   description of a link providing transport capacity over the air by a
   single carrier.  It is typically defined by its transmitting and
   receiving frequencies.  A radio link is a link providing the
   aggregated transport capacity of the supporting carriers in
   aggregated and/or protected configurations, which can be used to
   carry traffic on higher topology layers such as Ethernet and TDM.
   The model augments "YANG Data Model for Traffic Engineering (TE)
   Topologies" defined in [RFC8795], which is based on "A YANG Data
   Model for Network Topologies" defined in [RFC8345].

   The microwave point-to-point radio technology provides connectivity
   on L0/L1 over a radio link between two termination points, using one
   or several supporting carriers in aggregated or protected
   configurations.  That application of microwave technology cannot be
   used to perform cross-connection or switching of the traffic to
   create network connectivity across multiple microwave radio links.
   Instead, a payload of traffic on higher topology layers, normally L2
   Ethernet, is carried over the microwave radio link and when the
   microwave radio link is terminated at the endpoints, cross-connection
   and switching can be performed on that higher layer creating
   connectivity across multiple supporting microwave radio links.

   The microwave topology model is expected to be used between a
   Provisioning Network Controller (PNC) and a Multi Domain Service
   Coordinator(MDSC) [RFC8453].  Examples of use cases that can be
   supported are:

   1.  Correlation between microwave radio links and the supported links
       on higher topology layers. e.g. an L2 Ethernet topology.  This
       information can be used to understand how changes in the
       performance/status of a microwave radio link affect traffic on
       higher layers.

   2.  Propagation of relevant characteristics of a microwave radio
       link, such as bandwidth, to higher topology layers, where it e.g.
       could be used as a criterion when configuring and optimizing a
       path for a connection/service through the network end to end.

   3.  Optimization of the microwave radio link configurations on a
       network level, e.g. with the purpose to minimize overall
       interference and/or maximize the overall capacity provided by the
       links.

1.1.  Terminology and Definitions

   The following acronyms are used in this document:

   PNC Provisioning Network Controller

   MDSC Multi Domain Service Coordinator

1.2.  Tree Structure

   A simplified graphical representation of the data model is used in
   chapter 3.1 of this document.  The meaning of the symbols in these
   diagrams is defined in [RFC8340].

2.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Microwave Topology YANG Data Model

3.1.  YANG Tree

   module: ietf-microwave-topology

     augment /nw:networks/nw:network/nw:network-types/tet:te-topology:
       +--rw mw-topology!
     augment /nw:networks/nw:network/nw:node/nt:termination-point
               /tet:te:
       +--rw mw-tp-choice
          +--rw (mw-tp-option)?
             +--:(microwave-rltp)
             |  +--rw microwave-rltp!
             |     +---u microwave-rltp-attributes
             +--:(microwave-ctp)
                +--rw microwave-ctp!
                   +---u microwave-ctp-attributes
     augment /nw:networks/nw:network/nt:link/tet:te
               /tet:te-link-attributes:
       +--rw mw-link-choice
          +--rw (mw-link-option)?
             +--:(microwave-radio-link)
             |  +--rw microwave-radio-link!
             |     +---u microwave-radio-link-attributes
             +--:(microwave-carrier)
                +--rw microwave-carrier!
                   +---u microwave-carrier-attributes
     augment /nw:networks/nw:network/nt:link/tet:te
               /tet:te-link-attributes/tet:max-link-bandwidth
               /tet:te-bandwidth/tet:technology:
       +--:(microwave)
          +---u microwave-bandwidth

3.2.  Relationship between radio links and carriers

   A microwave radio link is always an aggregate of one or multiple
   carries, in various configurations/modes.  The supporting carriers
   are identified by its termination points and are listed in the
   container bundled-links as part of the te-link-config in the YANG
   Data Model for Traffic Engineering (TE) Topologies [RFC8795] for a
   radio-link.  The exact configuration of the included carriers is
   further specified in the rlt-mode container (1+0, 2+0, 1+1, etc.) for
   the radio-link.  Appendix A includes JSON examples of how such a
   relationship can be modelled.

3.3.  Relationship with client topology model

   A microwave radio link carries a payload of traffic on higher
   topology layers, normally L2 Ethernet.  The leafs supporting-network,
   supporting-node, supporting-link, and supporting-termination-point in
   the generic YANG module for Network Topologies [RFC8345] are expected
   to be used to model a relationship/dependency from higher topology
   layers to a supporting microwave radio link topology layer.
   Appendix A includes JSON examples of an L2 Ethernet link transported
   over one supporting microwave link.

3.4.  Applicability of the Data Model for Traffic Engineering (TE)
      Topologies

   Since microwave is a point-to-point radio technology providing
   connectivity on L0/L1 over a radio link between two termination
   points and cannot be used to perform cross-connection or switching of
   the traffic to create network connectivity across multiple microwave
   radio links, a majority of the leafs in the Data Model for Traffic
   Engineering (TE) Topologies augmented by the microwave topology model
   are not applicable.  An example of which leafs are considered
   applicable can be found in appendix "Examples of the application of
   the Topology Models" Appendix A in this document.

   More specifically, admin-status and oper-status are recommended to be
   reported for links only.  Status for termination points can be used
   when links are inter-domain and when the status of only one side of
   link is known, but since microwave is a point-to-point technology
   where both ends normally belong to the same domain it is not expected
   to be applicable in normal cases.  Furthermore, admin-status is not
   applicable for microwave radio links.  Enable and disable of a radio
   link is instead done in the constituent carriers.

3.5.  Model applicability to other technology

   TBD

3.6.  Microwave Topology YANG Module

   <CODE BEGINS> file "ietf-microwave-topology.yang"
    module ietf-microwave-topology {
      yang-version "1.1";
      namespace
      "urn:ietf:params:xml:ns:yang:ietf-microwave-topology";

      prefix "mwtopo";

      import ietf-network {
        prefix "nw";
        reference "RFC 8345: A YANG Data Model for Network Topologies";
      }

      import ietf-network-topology {
        prefix "nt";
        reference "RFC 8345: A YANG Data Model for Network Topologies";
      }

      import ietf-te-topology {
        prefix "tet";
        reference "RFC 8795: YANG Data Model for Traffic Engineering
                   (TE) Topologies";
      }

      import ietf-microwave-types {
        prefix mw-types;
        reference "RFC 8561";
      }

      organization
        "Internet Engineering Task Force (IETF) CCAMP WG";
      contact
       "WG Web: <https://datatracker.ietf.org/wg/ccamp/>
        WG List: <mailto:ccamp@ietf.org>

   //[JonasA] Who would like to be on the list of editors/contributors?
         Editor: Jonas Ahlberg
                 <mailto:jonas.ahlberg@ericsson.com>
         Editor: Scott Mansfield
                 <mailto:scott.mansfield@ericsson.com>
         Editor: Min Ye
                 <mailto:amy.yemin@huawei.com>
         Editor: Italo Busi
                 <mailto:Italo.Busi@huawei.com>
         Editor: Xi Li
                 <mailto:Xi.Li@neclab.eu>
         Editor: Daniela Spreafico
                 <mailto:daniela.spreafico@nokia.com>
        ";

    // Note to RFC Editor: replace XXXX with actual RFC number and
    // remove this note.
      description
        "This is a module for microwave topology.

        Copyright (c) 2022 IETF Trust and the persons
        identified as authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Revised BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (https://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC XXXX; see
        the RFC itself for full legal notices.";

      revision 2022-10-12   {
        description
        "Draft to be used as a basis for the continued microwave
         team discussions";
        reference "";
      }

      /*
       * Typedefs
       */

      typedef power {
        type decimal64 {
          fraction-digits 1;
        }
        description
          "Type used for the power values 'selected' and
           'measured'.";
      }

      /*
       * Groupings
       */

      grouping rlt-mode {
        description
          "This grouping provides a flexible definition of number
          of bonded carriers and protecting carriers of a radio
          link.";
        leaf num-bonded-carriers {
          type uint32;
          mandatory true;
          description
            "Number of bonded carriers.";
        }
        leaf num-protecting-carriers {
          type uint32;
          mandatory true;
          description
            "Number of protecting carriers.";
        }
      }

      grouping microwave-rltp-attributes {
        description "Grouping used for attributes describing a microwave
                     radio link termination point.";

    //Any attributes to be included?
      }

      grouping microwave-ctp-attributes {
        description "Grouping used for attributes describing a microwave
                     carrier termination point.";

    // Any attributes to be included?
      }

      grouping microwave-radio-link-attributes {
        description "Grouping used for attributes describing a microwave
                     radio link.";
        container rlt-mode {
          description
            "This grouping provides a flexible definition of number
            of bonded carriers and protecting carriers of a radio
            link.";
          uses rlt-mode;
        }
    // Any other attributes to be included?
      }

      grouping microwave-carrier-attributes {
        description "Grouping used for attributes describing a microwave
                     carrier.";
        leaf tx-frequency {
          type uint32;
          units "kHz";
          description
            "Selected transmitter frequency.
             Related to the data node tx-frequency in RFC 8561.";
          reference
            "RFC 8561: A YANG Data Model for Microwave Radio Link";
        }
        leaf rx-frequency {
          type uint32;
          units "kHz";
          description
            "Selected receiver frequency.
             Related to the data node actual-rx-frequency in RFC 8561.";
          reference
            "RFC 8561: A YANG Data Model for Microwave Radio Link";
        }
        leaf channel-separation {
          type uint32;
          units "kHz";
          description
            "The amount of bandwidth allocated to a carrier.  The
             distance between adjacent channels in a radio
             frequency channels arrangement.
             Related to the data node channel-separation in RFC 8561.";
          reference
            "ETSI EN 302 217-1 and
             RFC 8561: A YANG Data Model for Microwave Radio Link";
        }
        leaf actual-tx-cm {
          type identityref {
            base mw-types:coding-modulation;
          }
          config false;
          description
            "Actual coding/modulation in transmitting direction.
             Related to the data node actual-tx-cm in RFC 8561.";
          reference
            "RFC 8561: A YANG Data Model for Microwave Radio Link";
        }
        leaf actual-snir {
          type decimal64 {
            fraction-digits 1;
            range "0..99";
          }
          units "dB";
          config false;
          description
            "Actual signal to noise plus the interference ratio
             (0.1 dB resolution).
             Related to the data node actual-snir in RFC 8561.";
          reference
            "RFC 8561: A YANG Data Model for Microwave Radio Link";
        }
        leaf actual-transmitted-level {
          type power {
            range "-99..99";
          }
          units "dBm";
          config false;
          description
            "Actual transmitted power level (0.1 dBm resolution).
             Related to the data node actual-transmitted-level
             in RFC 8561.";
          reference
            "ETSI EN 301 129 and
             RFC 8561: A YANG Data Model for Microwave Radio Link";
        }

    //Any other attributes to be included?
      }

      grouping microwave-bandwidth {
        description "Grouping used for microwave bandwidth.";
        leaf mw-bandwidth {
          type uint64;
          units "Kbps";
          config false;
          description
            "Nominal microwave radio link and carrier bandwidth.";
        }
      }

      /*
       * Data nodes
       */
      augment "/nw:networks/nw:network/nw:network-types/"
              + "tet:te-topology" {
        description
          "Augment network types to define a microwave network
           topology type.";
        container mw-topology {
          presence "Indicates a topology type of microwave.";
          description "Microwave topology type";
        }
      }

      augment "/nw:networks/nw:network/nw:node/nt:termination-point/"
              + "tet:te" {
        when '../../../nw:network-types/tet:te-topology/'
             + 'mwtopo:mw-topology' {
          description
            "Augmentation parameters apply only for networks with an
             microwave network topology type.";
        }
        description
          "Augmentation to add microwave technology specific
           characteristics to a termination point.";
        container mw-tp-choice {
          description "Specification of type of termination point.";
          choice mw-tp-option {
            description "Selection of type of termination point.";
            case microwave-rltp {
              container "microwave-rltp" {
                presence
                  "Denotes a microwave radio link termination point.
                   It corresponds to a microwave RLT interface as
                   defined in RFC 8561.";
                uses microwave-rltp-attributes;
                description
                  "Denotes and describes a microwave radio link
                   termination point.";
              }
            }
            case microwave-ctp {
              container "microwave-ctp" {
                presence
                  "Denotes a microwave carrier termination point.
                   It corresponds to a microwave CT interface as
                   defined in RFC 8561.";
                uses microwave-ctp-attributes;
                description
                  "Denotes and describes a microwave carrier
                   termination point.";
              }
            }
          }
        }
      }

      augment "/nw:networks/nw:network/nt:link/tet:te/"
              + "tet:te-link-attributes" {
        when '../../../nw:network-types/tet:te-topology/'
           + 'mwtopo:mw-topology' {
          description
            "Augmentation parameters apply only for networks with an
             microwave network topology type.";
        }
        description
          "Augmentation to add microwave technology specific
           characteristics to a link.";
        container mw-link-choice {
          description "Specification of type of link.";
          choice mw-link-option {
            description "Selection of type of link.";
            case microwave-radio-link {
              container "microwave-radio-link" {
                presence
                  "Denotes a microwave radio link";
                uses microwave-radio-link-attributes;
                description
                  "Denotes and describes a microwave radio link";
              }
            }
            case microwave-carrier {
              container "microwave-carrier" {
                presence "Denotes a microwave carrier";
                uses microwave-carrier-attributes;
                description "Denotes and describes a microwave carrier";
              }
            }
          }
        }
      }

      augment "/nw:networks/nw:network/nt:link/tet:te/"
              + "tet:te-link-attributes/"
              + "tet:max-link-bandwidth/"
              + "tet:te-bandwidth/tet:technology" {
        when '../../../../../nw:network-types/tet:te-topology/'
             + 'mwtopo:mw-topology' {
          description
            "Augmentation parameters apply only for networks with an
             microwave network topology type.";
        }
        description
          "Augmentation for TE bandwidth.";
        case microwave {
         uses microwave-bandwidth;
        }
      }
    }
   <CODE ENDS>

4.  Security Considerations

   The YANG module specified in this document defines schemas for data
   that is designed to be accessed via network management protocols such
   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer
   is the secure transport layer, and the mandatory-to-implement secure
   transport is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer
   is HTTPS, and the mandatory-to-implement secure transport is TLS
   [RFC8446].

   The NETCONF access control model [RFC8341] provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.

   The YANG module specified in this document imports and augments the
   ietf-network and ietf-network-topology models defined in [RFC8345].
   The security considerations from [RFC8345] are applicable to the
   module in this document.

   There are a several data nodes defined in this YANG module that are
   writable/creatable/deletable (i.e., config true, which is the
   default).  These data nodes may be considered sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)
   to these data nodes without proper protection can have a negative
   effect on network operations.  These are the subtrees and data nodes
   and their sensitivity/vulnerability:

   *  rlt-mode: A malicious client could attempt to modify the mode in
      which the radio link is configured and thereby change the intended
      behaviour of the link.

   *  tx-frequency, rx-frequency and channel-separation: A malicious
      client could attempt to modify the frequency configuration of a
      carrier which could modify the intended behaviour or make the
      configurtion invalid and thereby stop the operation of it.

5.  IANA Considerations

   IANA is asked to assign a new URI from the "IETF XML Registry"
   [RFC3688] as follows:

   URI: urn:ietf:params:xml:ns:yang:ietf-microwave-topology
   Registrant Contact: The IESG
   XML: N/A; the requested URI is an XML namespace.

   It is proposed that IANA should record YANG module names in the "YANG
   Module Names" registry [RFC6020] as follows:

       Name: ietf-microwave-topology
       Maintained by IANA?: N
       Namespace: urn:ietf:params:xml:ns:yang:ietf-microwave-topology
       Prefix: mwtopo
       Reference: RFC XXXX

6.  References

6.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/rfc/rfc3688>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/rfc/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/rfc/rfc6241>.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, DOI 10.17487/RFC6242, June 2011,
              <https://www.rfc-editor.org/rfc/rfc6242>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/rfc/rfc8040>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8341]  Bierman, A. and M. Bjorklund, "Network Configuration
              Access Control Model", STD 91, RFC 8341,
              DOI 10.17487/RFC8341, March 2018,
              <https://www.rfc-editor.org/rfc/rfc8341>.

   [RFC8345]  Clemm, A., Medved, J., Varga, R., Bahadur, N.,
              Ananthakrishnan, H., and X. Liu, "A YANG Data Model for
              Network Topologies", RFC 8345, DOI 10.17487/RFC8345, March
              2018, <https://www.rfc-editor.org/rfc/rfc8345>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8446>.

   [RFC8795]  Liu, X., Bryskin, I., Beeram, V., Saad, T., Shah, H., and
              O. Gonzalez de Dios, "YANG Data Model for Traffic
              Engineering (TE) Topologies", RFC 8795,
              DOI 10.17487/RFC8795, August 2020,
              <https://www.rfc-editor.org/rfc/rfc8795>.

6.2.  Informative References

   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/rfc/rfc8340>.

   [RFC8453]  Ceccarelli, D., Ed. and Y. Lee, Ed., "Framework for
              Abstraction and Control of TE Networks (ACTN)", RFC 8453,
              DOI 10.17487/RFC8453, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8453>.

   [RFC8944]  Dong, J., Wei, X., Wu, Q., Boucadair, M., and A. Liu, "A
              YANG Data Model for Layer 2 Network Topologies", RFC 8944,
              DOI 10.17487/RFC8944, November 2020,
              <https://www.rfc-editor.org/rfc/rfc8944>.

Appendix A.  Examples of the application of the Microwave Topology Model

   This appendix provides some examples and illustrations of how the
   Microwave Topology Model can be used.  There is one extended tree to
   illustrate an example of a complete Microwave Topology Model
   including the relevant data nodes from network-topology and te-
   topology.  There are also JSON based instantiations of the Microwave
   Topology Model for a couple of small network examples.

A.1.  A tree for a complete Microwave Topology Model

   The tree below shows an example of the relevant leafs for a complete
   Microwave Topology Model including the augmented Network Topology
   Model defined in [RFC8345] and the Traffic Engineering (TE)
   Topologies model defined in [RFC8795].

   module: ietf-interfaces
     +--rw interfaces
     |  +--rw interface* [name]
     |     +--rw name                                string
     |     +--rw description?                        string
     |     +--rw type                                identityref
     |     +--rw enabled?                            boolean
     |     +--rw link-up-down-trap-enable?           enumeration {if-mib}?
     |     +--ro admin-status                        enumeration {if-mib}?
     |     +--ro oper-status                         enumeration
     |     +--ro last-change?                        yang:date-and-time
     |     +--ro if-index                            int32 {if-mib}?
     |     +--ro phys-address?                       yang:phys-address
     |     +--ro higher-layer-if*                    interface-ref
     |     +--ro lower-layer-if*                     interface-ref
     |     +--ro speed?                              yang:gauge64
     |     +--ro statistics
     |     |  +--ro discontinuity-time    yang:date-and-time
     |     |  +--ro in-octets?            yang:counter64
     |     |  +--ro in-unicast-pkts?      yang:counter64
     |     |  +--ro in-broadcast-pkts?    yang:counter64
     |     |  +--ro in-multicast-pkts?    yang:counter64
     |     |  +--ro in-discards?          yang:counter32
     |     |  +--ro in-errors?            yang:counter32
     |     |  +--ro in-unknown-protos?    yang:counter32
     |     |  +--ro out-octets?           yang:counter64
     |     |  +--ro out-unicast-pkts?     yang:counter64
     |     |  +--ro out-broadcast-pkts?   yang:counter64
     |     |  +--ro out-multicast-pkts?   yang:counter64
     |     |  +--ro out-discards?         yang:counter32
     |     |  +--ro out-errors?           yang:counter32
     |     +--rw mrl:id?                             string
     |     +--rw mrl:mode                            identityref
     |     +--rw mrl:carrier-terminations*           if:interface-ref
     |     +--rw mrl:rlp-groups*                     -> /radio-link-protection-groups/protection-group/name
     |     +--rw mrl:xpic-pairs*                     -> /xpic-pairs/xpic-pair/name {xpic}?
     |     +--rw mrl:mimo-groups*                    -> /mimo-groups/mimo-group/name {mimo}?
     |     +--rw mrl:tdm-connections* [tdm-type] {tdm}?
     |     |  +--rw mrl:tdm-type           identityref
     |     |  +--rw mrl:tdm-connections    uint16
     |     +--rw mrl:carrier-id?                     string
     |     +--rw mrl:tx-enabled?                     boolean
     |     +--ro mrl:tx-oper-status?                 enumeration
     |     +--rw mrl:tx-frequency                    uint32
     |     +--rw (mrl:freq-or-distance)
     |     |  +--:(mrl:rx-frequency)
     |     |  |  +--rw mrl:rx-frequency?             uint32
     |     |  +--:(mrl:duplex-distance)
     |     |     +--rw mrl:duplex-distance?          int32
     |     +--ro mrl:actual-rx-frequency?            uint32
     |     +--ro mrl:actual-duplex-distance?         uint32
     |     +--rw mrl:channel-separation              uint32
     |     +--rw mrl:polarization?                   enumeration
     |     +--rw (mrl:power-mode)
     |     |  +--:(mrl:rtpc)
     |     |  |  +--rw mrl:rtpc
     |     |  |     +--rw mrl:maximum-nominal-power    power
     |     |  +--:(mrl:atpc)
     |     |     +--rw mrl:atpc
     |     |        +--rw mrl:maximum-nominal-power    power
     |     |        +--rw mrl:atpc-lower-threshold     power
     |     |        +--rw mrl:atpc-upper-threshold     power
     |     +--ro mrl:actual-transmitted-level?       power
     |     +--ro mrl:actual-received-level?          power
     |     +--rw (mrl:coding-modulation-mode)
     |     |  +--:(mrl:single)
     |     |  |  +--rw mrl:single
     |     |  |     +--rw mrl:selected-cm    identityref
     |     |  +--:(mrl:adaptive)
     |     |     +--rw mrl:adaptive
     |     |        +--rw mrl:selected-min-acm    identityref
     |     |        +--rw mrl:selected-max-acm    identityref
     |     +--ro mrl:actual-tx-cm?                   identityref
     |     +--ro mrl:actual-snir?                    decimal64
     |     +--ro mrl:actual-xpi?                     decimal64 {xpic}?
     |     +--rw mrl:ct-performance-thresholds
     |     |  +--rw mrl:received-level-alarm-threshold?      power
     |     |  +--rw mrl:transmitted-level-alarm-threshold?   power
     |     |  +--rw mrl:ber-alarm-threshold?                 enumeration
     |     +--rw mrl:if-loop?                        enumeration
     |     +--rw mrl:rf-loop?                        enumeration
     |     +--ro mrl:capabilities
     |     |  +--ro mrl:min-tx-frequency?          uint32
     |     |  +--ro mrl:max-tx-frequency?          uint32
     |     |  +--ro mrl:min-rx-frequency?          uint32
     |     |  +--ro mrl:max-rx-frequency?          uint32
     |     |  +--ro mrl:minimum-power?             power
     |     |  +--ro mrl:maximum-available-power?   power
     |     |  +--ro mrl:available-min-acm?         identityref
     |     |  +--ro mrl:available-max-acm?         identityref
     |     +--ro mrl:error-performance-statistics
     |     |  +--ro mrl:bbe?   yang:counter32
     |     |  +--ro mrl:es?    yang:counter32
     |     |  +--ro mrl:ses?   yang:counter32
     |     |  +--ro mrl:uas?   yang:counter32
     |     +--ro mrl:radio-performance-statistics
     |        +--ro mrl:min-rltm?   power
     |        +--ro mrl:max-rltm?   power
     |        +--ro mrl:min-tltm?   power
     |        +--ro mrl:max-tltm?   power
     x--ro interfaces-state
        x--ro interface* [name]
           x--ro name               string
           x--ro type               identityref
           x--ro admin-status       enumeration {if-mib}?
           x--ro oper-status        enumeration
           x--ro last-change?       yang:date-and-time
           x--ro if-index           int32 {if-mib}?
           x--ro phys-address?      yang:phys-address
           x--ro higher-layer-if*   interface-state-ref
           x--ro lower-layer-if*    interface-state-ref
           x--ro speed?             yang:gauge64
           x--ro statistics
              x--ro discontinuity-time    yang:date-and-time
              x--ro in-octets?            yang:counter64
              x--ro in-unicast-pkts?      yang:counter64
              x--ro in-broadcast-pkts?    yang:counter64
              x--ro in-multicast-pkts?    yang:counter64
              x--ro in-discards?          yang:counter32
              x--ro in-errors?            yang:counter32
              x--ro in-unknown-protos?    yang:counter32
              x--ro out-octets?           yang:counter64
              x--ro out-unicast-pkts?     yang:counter64
              x--ro out-broadcast-pkts?   yang:counter64
              x--ro out-multicast-pkts?   yang:counter64
              x--ro out-discards?         yang:counter32
              x--ro out-errors?           yang:counter32

   module: ietf-l2-topology

     notifications:
       +---n l2-node-event
       |  +--ro event-type?           l2-network-event-type
       |  +--ro node-ref?             -> /nw:networks/network[nw:network-id=current()/../network-ref]/node/node-id
       |  +--ro network-ref?          -> /nw:networks/network/network-id
       |  +--ro l2-topology!
       |  +--ro l2-node-attributes
       |     +--ro name?                 string
       |     +--ro flags*                node-flag-type
       |     +--ro bridge-id*            string
       |     +--ro management-address*   inet:ip-address
       |     +--ro management-mac?       yang:mac-address
       |     +--ro management-vlan?      string
       +---n l2-link-event
       |  +--ro event-type?           l2-network-event-type
       |  +--ro link-ref?             -> /nw:networks/network[nw:network-id=current()/../network-ref]/nt:link/link-id
       |  +--ro network-ref?          -> /nw:networks/network/network-id
       |  +--ro l2-topology!
       |  +--ro l2-link-attributes
       |     +--ro name?        string
       |     +--ro flags*       link-flag-type
       |     +--ro rate?        uint64
       |     +--ro delay?       uint32
       |     +--ro auto-nego?   boolean
       |     +--ro duplex?      duplex-mode
       +---n l2-termination-point-event
          +--ro event-type?                        l2-network-event-type
          +--ro tp-ref?                            -> /nw:networks/network[nw:network-id=current()/../network-ref]/node[nw:node-id=current()/../node-ref]/nt:termination-point/tp-id
          +--ro node-ref?                          -> /nw:networks/network[nw:network-id=current()/../network-ref]/node/node-id
          +--ro network-ref?                       -> /nw:networks/network/network-id
          +--ro l2-topology!
          +--ro l2-termination-point-attributes
             +--ro interface-name?       string
             +--ro mac-address?          yang:mac-address
             +--ro port-number*          uint32
             +--ro unnumbered-id*        uint32
             +--ro encapsulation-type?   identityref
             +--ro outer-tag?            dot1q-types:vid-range-type {VLAN}?
             +--ro outer-tpid?           dot1q-types:dot1q-tag-type {QinQ}?
             +--ro inner-tag?            dot1q-types:vid-range-type {VLAN}?
             +--ro inner-tpid?           dot1q-types:dot1q-tag-type {QinQ}?
             +--ro lag?                  boolean
             +--ro member-link-tp*       -> /nw:networks/network/node/nt:termination-point/tp-id
             +--ro vxlan {VXLAN}?
                +--ro vni-id?   vni

   module: ietf-microwave-radio-link
     +--rw radio-link-protection-groups
     |  +--rw protection-group* [name]
     |     +--rw name                            string
     |     +--rw protection-architecture-type?   identityref
     |     +--rw members*                        if:interface-ref
     |     +--rw operation-type?                 enumeration
     |     +--rw working-entity*                 if:interface-ref
     |     +--rw revertive-wait-to-restore?      uint16
     |     +--rw hold-off-timer?                 uint16
     |     +--ro status?                         identityref
     |     +---x manual-switch-working
     |     +---x manual-switch-protection
     |     +---x forced-switch
     |     +---x lockout-of-protection
     |     +---x freeze
     |     +---x exercise
     |     +---x clear
     +--rw xpic-pairs {xpic}?
     |  +--rw xpic-pair* [name]
     |     +--rw name       string
     |     +--rw enabled?   boolean
     |     +--rw members*   if:interface-ref
     +--rw mimo-groups {mimo}?
        +--rw mimo-group* [name]
           +--rw name       string
           +--rw enabled?   boolean
           +--rw members*   if:interface-ref

   module: ietf-network
     +--rw networks
        +--rw network* [network-id]
        |  +--rw network-id                    network-id
        |  +--rw network-types
        |  |  +--rw tet:te-topology!
        |  |  |  +--rw ethtetopo:eth-tran-topology!
        |  |  |  +--rw mwtopo:mw-topology!
        |  |  +--rw l2t:l2-topology!
        |  +--rw supporting-network* [network-ref]
        |  |  +--rw network-ref    -> /networks/network/network-id
        |  +--rw node* [node-id]
        |  |  +--rw node-id                   node-id
        |  |  +--rw supporting-node* [network-ref node-ref]
        |  |  |  +--rw network-ref    -> ../../../supporting-network/network-ref
        |  |  |  +--rw node-ref       -> /networks/network/node/node-id
        |  |  +--rw nt:termination-point* [tp-id]
        |  |  |  +--rw nt:tp-id                                            tp-id
        |  |  |  +--rw nt:supporting-termination-point* [network-ref node-ref tp-ref]
        |  |  |  |  +--rw nt:network-ref    -> ../../../nw:supporting-node/network-ref
        |  |  |  |  +--rw nt:node-ref       -> ../../../nw:supporting-node/node-ref
        |  |  |  |  +--rw nt:tp-ref         -> /nw:networks/network[nw:network-id=current()/../network-ref]/node[nw:node-id=current()/../node-ref]/termination-point/tp-id
        |  |  |  +--rw tet:te-tp-id?                                       te-types:te-tp-id
        |  |  |  +--rw tet:te!
        |  |  |  |  +--rw tet:admin-status?                     te-types:te-admin-status
        |  |  |  |  +--rw tet:name?                             string
        |  |  |  |  +--rw tet:interface-switching-capability* [switching-capability encoding]
        |  |  |  |  |  +--rw tet:switching-capability    identityref
        |  |  |  |  |  +--rw tet:encoding                identityref
        |  |  |  |  |  +--rw tet:max-lsp-bandwidth* [priority]
        |  |  |  |  |     +--rw tet:priority        uint8
        |  |  |  |  |     +--rw tet:te-bandwidth
        |  |  |  |  |        +--rw (tet:technology)?
        |  |  |  |  |           +--:(tet:generic)
        |  |  |  |  |           |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |           +--:(ethtetopo:eth)
        |  |  |  |  |              +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--rw tet:inter-domain-plug-id?             binary
        |  |  |  |  +--rw tet:inter-layer-lock-id*              uint32
        |  |  |  |  +--ro tet:oper-status?                      te-types:te-oper-status
        |  |  |  |  +--ro tet:geolocation
        |  |  |  |  |  +--ro tet:altitude?    int64
        |  |  |  |  |  +--ro tet:latitude?    geographic-coordinate-degree
        |  |  |  |  |  +--ro tet:longitude?   geographic-coordinate-degree
        |  |  |  |  +--rw mwtopo:mw-tp-choice
        |  |  |  |  |  +--rw (mwtopo:mw-tp-option)?
        |  |  |  |  |     +--:(mwtopo:microwave-rltp)
        |  |  |  |  |     |  +--rw mwtopo:microwave-rltp!
        |  |  |  |  |     +--:(mwtopo:microwave-ctp)
        |  |  |  |  |        +--rw mwtopo:microwave-ctp!
        |  |  |  |  +--rw ifref:tp-to-interface-path?           -> /if:interfaces/interface/name
        |  |  |  +--rw ethtetopo:ltp-mac-address?                          yang:mac-address
        |  |  |  +--rw ethtetopo:port-vlan-id?                             etht-types:vlanid
        |  |  |  +--rw ethtetopo:maximum-frame-size?                       uint16
        |  |  |  +--rw (ethtetopo:direction)?
        |  |  |  |  +--:(ethtetopo:symmetrical)
        |  |  |  |  |  +--rw ethtetopo:ingress-egress-bandwidth-profile
        |  |  |  |  |     +--rw ethtetopo:bandwidth-profile-type?   etht-types:bandwidth-profile-type
        |  |  |  |  |     +--rw ethtetopo:CIR?                      uint64
        |  |  |  |  |     +--rw ethtetopo:CBS?                      uint64
        |  |  |  |  |     +--rw ethtetopo:EIR?                      uint64
        |  |  |  |  |     +--rw ethtetopo:EBS?                      uint64
        |  |  |  |  |     +--rw ethtetopo:color-aware?              boolean
        |  |  |  |  |     +--rw ethtetopo:coupling-flag?            boolean
        |  |  |  |  +--:(ethtetopo:asymmetrical)
        |  |  |  |     +--rw ethtetopo:ingress-bandwidth-profile
        |  |  |  |     |  +--rw ethtetopo:bandwidth-profile-type?   etht-types:bandwidth-profile-type
        |  |  |  |     |  +--rw ethtetopo:CIR?                      uint64
        |  |  |  |     |  +--rw ethtetopo:CBS?                      uint64
        |  |  |  |     |  +--rw ethtetopo:EIR?                      uint64
        |  |  |  |     |  +--rw ethtetopo:EBS?                      uint64
        |  |  |  |     |  +--rw ethtetopo:color-aware?              boolean
        |  |  |  |     |  +--rw ethtetopo:coupling-flag?            boolean
        |  |  |  |     +--rw ethtetopo:egress-bandwidth-profile
        |  |  |  |        +--rw ethtetopo:bandwidth-profile-type?   etht-types:bandwidth-profile-type
        |  |  |  |        +--rw ethtetopo:CIR?                      uint64
        |  |  |  |        +--rw ethtetopo:CBS?                      uint64
        |  |  |  |        +--rw ethtetopo:EIR?                      uint64
        |  |  |  |        +--rw ethtetopo:EBS?                      uint64
        |  |  |  |        +--rw ethtetopo:color-aware?              boolean
        |  |  |  |        +--rw ethtetopo:coupling-flag?            boolean
        |  |  |  +--rw ethtetopo:eth-svc!
        |  |  |  |  +--rw ethtetopo:client-facing?               boolean
        |  |  |  |  +--rw ethtetopo:supported-classification
        |  |  |  |  |  +--rw ethtetopo:port-classification?   boolean
        |  |  |  |  |  +--rw ethtetopo:vlan-classification
        |  |  |  |  |     +--rw ethtetopo:vlan-tag-classification?   boolean
        |  |  |  |  |     +--rw ethtetopo:outer-tag
        |  |  |  |  |     |  +--rw ethtetopo:supported-tag-types*   etht-types:eth-tag-classify
        |  |  |  |  |     |  +--rw ethtetopo:vlan-bundling?         boolean
        |  |  |  |  |     |  +--rw ethtetopo:vlan-range?            etht-types:vid-range-type
        |  |  |  |  |     +--rw ethtetopo:second-tag
        |  |  |  |  |        +--rw ethtetopo:second-tag-classification?   boolean
        |  |  |  |  |        +--rw ethtetopo:supported-tag-types*         etht-types:eth-tag-classify
        |  |  |  |  |        +--rw ethtetopo:vlan-bundling?               boolean
        |  |  |  |  |        +--rw ethtetopo:vlan-range?                  etht-types:vid-range-type
        |  |  |  |  +--rw ethtetopo:supported-vlan-operations
        |  |  |  |     +--rw ethtetopo:asymmetrical-operations?       boolean
        |  |  |  |     +--rw ethtetopo:transparent-vlan-operations?   boolean
        |  |  |  |     +--rw ethtetopo:vlan-pop
        |  |  |  |     |  +--rw ethtetopo:vlan-pop-operations?   boolean
        |  |  |  |     |  +--rw ethtetopo:max-pop-tags?          uint8
        |  |  |  |     +--rw ethtetopo:vlan-push
        |  |  |  |        +--rw ethtetopo:vlan-push-operation?   boolean
        |  |  |  |        +--rw ethtetopo:outer-tag
        |  |  |  |        |  +--rw ethtetopo:supported-tag-types*   etht-types:eth-tag-type
        |  |  |  |        |  +--rw ethtetopo:vlan-range?            etht-types:vid-range-type
        |  |  |  |        +--rw ethtetopo:second-tag
        |  |  |  |           +--rw ethtetopo:push-second-tag?       boolean
        |  |  |  |           +--rw ethtetopo:supported-tag-types*   etht-types:eth-tag-type
        |  |  |  |           +--rw ethtetopo:vlan-range?            etht-types:vid-range-type
        |  |  |  +--rw l2t:l2-termination-point-attributes
        |  |  |     +--rw l2t:interface-name?       string
        |  |  |     +--rw l2t:mac-address?          yang:mac-address
        |  |  |     +--rw l2t:port-number*          uint32
        |  |  |     +--rw l2t:unnumbered-id*        uint32
        |  |  |     +--rw l2t:encapsulation-type?   identityref
        |  |  |     +--rw l2t:outer-tag?            dot1q-types:vid-range-type {VLAN}?
        |  |  |     +--rw l2t:outer-tpid?           dot1q-types:dot1q-tag-type {QinQ}?
        |  |  |     +--rw l2t:inner-tag?            dot1q-types:vid-range-type {VLAN}?
        |  |  |     +--rw l2t:inner-tpid?           dot1q-types:dot1q-tag-type {QinQ}?
        |  |  |     +--rw l2t:lag?                  boolean
        |  |  |     +--rw l2t:member-link-tp*       -> /nw:networks/network/node/nt:termination-point/tp-id
        |  |  |     +--rw l2t:vxlan {VXLAN}?
        |  |  |        +--rw l2t:vni-id?   vni
        |  |  +--rw tet:te-node-id?           te-types:te-node-id
        |  |  +--rw tet:te!
        |  |  |  +--rw tet:te-node-template*              -> ../../../../te/templates/node-template/name {template}?
        |  |  |  +--rw tet:te-node-attributes
        |  |  |  |  +--rw tet:admin-status?            te-types:te-admin-status
        |  |  |  |  +--rw tet:connectivity-matrices
        |  |  |  |  |  +--rw tet:number-of-entries?     uint16
        |  |  |  |  |  +--rw tet:label-restrictions
        |  |  |  |  |  |  +--rw tet:label-restriction* [index]
        |  |  |  |  |  |     +--rw tet:restriction?      enumeration
        |  |  |  |  |  |     +--rw tet:index             uint32
        |  |  |  |  |  |     +--rw tet:label-start
        |  |  |  |  |  |     |  +--rw tet:te-label
        |  |  |  |  |  |     |     +--rw (tet:technology)?
        |  |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |  |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |  |     +--rw tet:label-end
        |  |  |  |  |  |     |  +--rw tet:te-label
        |  |  |  |  |  |     |     +--rw (tet:technology)?
        |  |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |  |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |  |     +--rw tet:label-step
        |  |  |  |  |  |     |  +--rw (tet:technology)?
        |  |  |  |  |  |     |     +--:(tet:generic)
        |  |  |  |  |  |     |     |  +--rw tet:generic?          int32
        |  |  |  |  |  |     |     +--:(ethtetopo:eth)
        |  |  |  |  |  |     |        +--rw ethtetopo:eth-step?   uint16
        |  |  |  |  |  |     +--rw tet:range-bitmap?     yang:hex-string
        |  |  |  |  |  |     +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |  |     +--rw ethtetopo:priority?   uint8
        |  |  |  |  |  +--rw tet:is-allowed?            boolean
        |  |  |  |  |  +--rw tet:underlay {te-topology-hierarchy}?
        |  |  |  |  |  |  +--rw tet:enabled?                     boolean
        |  |  |  |  |  |  +--rw tet:primary-path
        |  |  |  |  |  |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |  |  |  +--rw tet:path-element* [path-element-id]
        |  |  |  |  |  |  |     +--rw tet:path-element-id              uint32
        |  |  |  |  |  |  |     +--rw (tet:type)?
        |  |  |  |  |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |  |  |        +--:(tet:label)
        |  |  |  |  |  |  |           +--rw tet:label-hop
        |  |  |  |  |  |  |              +--rw tet:te-label
        |  |  |  |  |  |  |                 +--rw (tet:technology)?
        |  |  |  |  |  |  |                 |  +--:(tet:generic)
        |  |  |  |  |  |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |  |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |  |                 +--rw tet:direction?            te-label-direction
        |  |  |  |  |  |  +--rw tet:backup-path* [index]
        |  |  |  |  |  |  |  +--rw tet:index           uint32
        |  |  |  |  |  |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |  |  |  +--rw tet:path-element* [path-element-id]
        |  |  |  |  |  |  |     +--rw tet:path-element-id              uint32
        |  |  |  |  |  |  |     +--rw (tet:type)?
        |  |  |  |  |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |  |  |        +--:(tet:label)
        |  |  |  |  |  |  |           +--rw tet:label-hop
        |  |  |  |  |  |  |              +--rw tet:te-label
        |  |  |  |  |  |  |                 +--rw (tet:technology)?
        |  |  |  |  |  |  |                 |  +--:(tet:generic)
        |  |  |  |  |  |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |  |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |  |                 +--rw tet:direction?            te-label-direction
        |  |  |  |  |  |  +--rw tet:protection-type?             identityref
        |  |  |  |  |  |  +--rw tet:tunnel-termination-points
        |  |  |  |  |  |  |  +--rw tet:source?        binary
        |  |  |  |  |  |  |  +--rw tet:destination?   binary
        |  |  |  |  |  |  +--rw tet:tunnels
        |  |  |  |  |  |     +--rw tet:sharing?   boolean
        |  |  |  |  |  |     +--rw tet:tunnel* [tunnel-name]
        |  |  |  |  |  |        +--rw tet:tunnel-name    string
        |  |  |  |  |  |        +--rw tet:sharing?       boolean
        |  |  |  |  |  +--rw tet:path-constraints
        |  |  |  |  |  |  +--rw tet:te-bandwidth
        |  |  |  |  |  |  |  +--rw (tet:technology)?
        |  |  |  |  |  |  |     +--:(tet:generic)
        |  |  |  |  |  |  |     |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |  |  |     +--:(ethtetopo:eth)
        |  |  |  |  |  |  |        +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  |  |  +--rw tet:link-protection?          identityref
        |  |  |  |  |  |  +--rw tet:setup-priority?           uint8
        |  |  |  |  |  |  +--rw tet:hold-priority?            uint8
        |  |  |  |  |  |  +--rw tet:signaling-type?           identityref
        |  |  |  |  |  |  +--rw tet:path-metric-bounds
        |  |  |  |  |  |  |  +--rw tet:path-metric-bound* [metric-type]
        |  |  |  |  |  |  |     +--rw tet:metric-type    identityref
        |  |  |  |  |  |  |     +--rw tet:upper-bound?   uint64
        |  |  |  |  |  |  +--rw tet:path-affinities-values
        |  |  |  |  |  |  |  +--rw tet:path-affinities-value* [usage]
        |  |  |  |  |  |  |     +--rw tet:usage    identityref
        |  |  |  |  |  |  |     +--rw tet:value?   admin-groups
        |  |  |  |  |  |  +--rw tet:path-affinity-names
        |  |  |  |  |  |  |  +--rw tet:path-affinity-name* [usage]
        |  |  |  |  |  |  |     +--rw tet:usage            identityref
        |  |  |  |  |  |  |     +--rw tet:affinity-name* [name]
        |  |  |  |  |  |  |        +--rw tet:name    string
        |  |  |  |  |  |  +--rw tet:path-srlgs-lists
        |  |  |  |  |  |  |  +--rw tet:path-srlgs-list* [usage]
        |  |  |  |  |  |  |     +--rw tet:usage     identityref
        |  |  |  |  |  |  |     +--rw tet:values*   srlg
        |  |  |  |  |  |  +--rw tet:path-srlgs-names
        |  |  |  |  |  |  |  +--rw tet:path-srlgs-name* [usage]
        |  |  |  |  |  |  |     +--rw tet:usage    identityref
        |  |  |  |  |  |  |     +--rw tet:names*   string
        |  |  |  |  |  |  +--rw tet:disjointness?             te-path-disjointness
        |  |  |  |  |  +--rw tet:optimizations
        |  |  |  |  |  |  +--rw (tet:algorithm)?
        |  |  |  |  |  |     +--:(tet:metric) {path-optimization-metric}?
        |  |  |  |  |  |     |  +--rw tet:optimization-metric* [metric-type]
        |  |  |  |  |  |     |  |  +--rw tet:metric-type                       identityref
        |  |  |  |  |  |     |  |  +--rw tet:weight?                           uint8
        |  |  |  |  |  |     |  |  +--rw tet:explicit-route-exclude-objects
        |  |  |  |  |  |     |  |  |  +--rw tet:route-object-exclude-object* [index]
        |  |  |  |  |  |     |  |  |     +--rw tet:index                        uint32
        |  |  |  |  |  |     |  |  |     +--rw (tet:type)?
        |  |  |  |  |  |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |     |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |  |     |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |  |     |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |  |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |     |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |     |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |     |  |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |  |     |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |  |     |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |  |     |  |  |        +--:(tet:label)
        |  |  |  |  |  |     |  |  |        |  +--rw tet:label-hop
        |  |  |  |  |  |     |  |  |        |     +--rw tet:te-label
        |  |  |  |  |  |     |  |  |        |        +--rw (tet:technology)?
        |  |  |  |  |  |     |  |  |        |        |  +--:(tet:generic)
        |  |  |  |  |  |     |  |  |        |        |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |  |  |        |        |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |  |  |        |        |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |  |  |        |        +--rw tet:direction?            te-label-direction
        |  |  |  |  |  |     |  |  |        +--:(tet:srlg)
        |  |  |  |  |  |     |  |  |           +--rw tet:srlg
        |  |  |  |  |  |     |  |  |              +--rw tet:srlg?   uint32
        |  |  |  |  |  |     |  |  +--rw tet:explicit-route-include-objects
        |  |  |  |  |  |     |  |     +--rw tet:route-object-include-object* [index]
        |  |  |  |  |  |     |  |        +--rw tet:index                        uint32
        |  |  |  |  |  |     |  |        +--rw (tet:type)?
        |  |  |  |  |  |     |  |           +--:(tet:numbered-node-hop)
        |  |  |  |  |  |     |  |           |  +--rw tet:numbered-node-hop
        |  |  |  |  |  |     |  |           |     +--rw tet:node-id     te-node-id
        |  |  |  |  |  |     |  |           |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |  |     |  |           +--:(tet:numbered-link-hop)
        |  |  |  |  |  |     |  |           |  +--rw tet:numbered-link-hop
        |  |  |  |  |  |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |     |  |           |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |  |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |           |     +--rw tet:node-id       te-node-id
        |  |  |  |  |  |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |           +--:(tet:as-number)
        |  |  |  |  |  |     |  |           |  +--rw tet:as-number-hop
        |  |  |  |  |  |     |  |           |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |  |     |  |           |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |  |     |  |           +--:(tet:label)
        |  |  |  |  |  |     |  |              +--rw tet:label-hop
        |  |  |  |  |  |     |  |                 +--rw tet:te-label
        |  |  |  |  |  |     |  |                    +--rw (tet:technology)?
        |  |  |  |  |  |     |  |                    |  +--:(tet:generic)
        |  |  |  |  |  |     |  |                    |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |  |                    |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |  |                    +--rw tet:direction?            te-label-direction
        |  |  |  |  |  |     |  +--rw tet:tiebreakers
        |  |  |  |  |  |     |     +--rw tet:tiebreaker* [tiebreaker-type]
        |  |  |  |  |  |     |        +--rw tet:tiebreaker-type    identityref
        |  |  |  |  |  |     +--:(tet:objective-function) {path-optimization-objective-function}?
        |  |  |  |  |  |        +--rw tet:objective-function
        |  |  |  |  |  |           +--rw tet:objective-function-type?   identityref
        |  |  |  |  |  +--ro tet:path-properties
        |  |  |  |  |  |  +--ro tet:path-metric* [metric-type]
        |  |  |  |  |  |  |  +--ro tet:metric-type           identityref
        |  |  |  |  |  |  |  +--ro tet:accumulative-value?   uint64
        |  |  |  |  |  |  +--ro tet:path-affinities-values
        |  |  |  |  |  |  |  +--ro tet:path-affinities-value* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage    identityref
        |  |  |  |  |  |  |     +--ro tet:value?   admin-groups
        |  |  |  |  |  |  +--ro tet:path-affinity-names
        |  |  |  |  |  |  |  +--ro tet:path-affinity-name* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage            identityref
        |  |  |  |  |  |  |     +--ro tet:affinity-name* [name]
        |  |  |  |  |  |  |        +--ro tet:name    string
        |  |  |  |  |  |  +--ro tet:path-srlgs-lists
        |  |  |  |  |  |  |  +--ro tet:path-srlgs-list* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage     identityref
        |  |  |  |  |  |  |     +--ro tet:values*   srlg
        |  |  |  |  |  |  +--ro tet:path-srlgs-names
        |  |  |  |  |  |  |  +--ro tet:path-srlgs-name* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage    identityref
        |  |  |  |  |  |  |     +--ro tet:names*   string
        |  |  |  |  |  |  +--ro tet:path-route-objects
        |  |  |  |  |  |     +--ro tet:path-route-object* [index]
        |  |  |  |  |  |        +--ro tet:index                        uint32
        |  |  |  |  |  |        +--ro (tet:type)?
        |  |  |  |  |  |           +--:(tet:numbered-node-hop)
        |  |  |  |  |  |           |  +--ro tet:numbered-node-hop
        |  |  |  |  |  |           |     +--ro tet:node-id     te-node-id
        |  |  |  |  |  |           |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |  |           +--:(tet:numbered-link-hop)
        |  |  |  |  |  |           |  +--ro tet:numbered-link-hop
        |  |  |  |  |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |           +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |           |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |           |     +--ro tet:node-id       te-node-id
        |  |  |  |  |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |           +--:(tet:as-number)
        |  |  |  |  |  |           |  +--ro tet:as-number-hop
        |  |  |  |  |  |           |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |  |           |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |  |           +--:(tet:label)
        |  |  |  |  |  |              +--ro tet:label-hop
        |  |  |  |  |  |                 +--ro tet:te-label
        |  |  |  |  |  |                    +--ro (tet:technology)?
        |  |  |  |  |  |                    |  +--:(tet:generic)
        |  |  |  |  |  |                    |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |                    |  +--:(ethtetopo:eth)
        |  |  |  |  |  |                    |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |                    +--ro tet:direction?            te-label-direction
        |  |  |  |  |  +--rw tet:connectivity-matrix* [id]
        |  |  |  |  |     +--rw tet:id                  uint32
        |  |  |  |  |     +--rw tet:from
        |  |  |  |  |     |  +--rw tet:tp-ref?               -> ../../../../../../nt:termination-point/tp-id
        |  |  |  |  |     |  +--rw tet:label-restrictions
        |  |  |  |  |     |     +--rw tet:label-restriction* [index]
        |  |  |  |  |     |        +--rw tet:restriction?      enumeration
        |  |  |  |  |     |        +--rw tet:index             uint32
        |  |  |  |  |     |        +--rw tet:label-start
        |  |  |  |  |     |        |  +--rw tet:te-label
        |  |  |  |  |     |        |     +--rw (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |        +--rw tet:label-end
        |  |  |  |  |     |        |  +--rw tet:te-label
        |  |  |  |  |     |        |     +--rw (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |        +--rw tet:label-step
        |  |  |  |  |     |        |  +--rw (tet:technology)?
        |  |  |  |  |     |        |     +--:(tet:generic)
        |  |  |  |  |     |        |     |  +--rw tet:generic?          int32
        |  |  |  |  |     |        |     +--:(ethtetopo:eth)
        |  |  |  |  |     |        |        +--rw ethtetopo:eth-step?   uint16
        |  |  |  |  |     |        +--rw tet:range-bitmap?     yang:hex-string
        |  |  |  |  |     |        +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |     |        +--rw ethtetopo:priority?   uint8
        |  |  |  |  |     +--rw tet:to
        |  |  |  |  |     |  +--rw tet:tp-ref?               -> ../../../../../../nt:termination-point/tp-id
        |  |  |  |  |     |  +--rw tet:label-restrictions
        |  |  |  |  |     |     +--rw tet:label-restriction* [index]
        |  |  |  |  |     |        +--rw tet:restriction?      enumeration
        |  |  |  |  |     |        +--rw tet:index             uint32
        |  |  |  |  |     |        +--rw tet:label-start
        |  |  |  |  |     |        |  +--rw tet:te-label
        |  |  |  |  |     |        |     +--rw (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |        +--rw tet:label-end
        |  |  |  |  |     |        |  +--rw tet:te-label
        |  |  |  |  |     |        |     +--rw (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |        +--rw tet:label-step
        |  |  |  |  |     |        |  +--rw (tet:technology)?
        |  |  |  |  |     |        |     +--:(tet:generic)
        |  |  |  |  |     |        |     |  +--rw tet:generic?          int32
        |  |  |  |  |     |        |     +--:(ethtetopo:eth)
        |  |  |  |  |     |        |        +--rw ethtetopo:eth-step?   uint16
        |  |  |  |  |     |        +--rw tet:range-bitmap?     yang:hex-string
        |  |  |  |  |     |        +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |     |        +--rw ethtetopo:priority?   uint8
        |  |  |  |  |     +--rw tet:is-allowed?         boolean
        |  |  |  |  |     +--rw tet:underlay {te-topology-hierarchy}?
        |  |  |  |  |     |  +--rw tet:enabled?                     boolean
        |  |  |  |  |     |  +--rw tet:primary-path
        |  |  |  |  |     |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |     |  |  +--rw tet:path-element* [path-element-id]
        |  |  |  |  |     |  |     +--rw tet:path-element-id              uint32
        |  |  |  |  |     |  |     +--rw (tet:type)?
        |  |  |  |  |     |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |     |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |     |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |     |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |     |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:as-number)
        |  |  |  |  |     |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |     |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |     |  |        +--:(tet:label)
        |  |  |  |  |     |  |           +--rw tet:label-hop
        |  |  |  |  |     |  |              +--rw tet:te-label
        |  |  |  |  |     |  |                 +--rw (tet:technology)?
        |  |  |  |  |     |  |                 |  +--:(tet:generic)
        |  |  |  |  |     |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |     |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |  |                 +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |  +--rw tet:backup-path* [index]
        |  |  |  |  |     |  |  +--rw tet:index           uint32
        |  |  |  |  |     |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |     |  |  +--rw tet:path-element* [path-element-id]
        |  |  |  |  |     |  |     +--rw tet:path-element-id              uint32
        |  |  |  |  |     |  |     +--rw (tet:type)?
        |  |  |  |  |     |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |     |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |     |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |     |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |     |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:as-number)
        |  |  |  |  |     |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |     |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |     |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |     |  |        +--:(tet:label)
        |  |  |  |  |     |  |           +--rw tet:label-hop
        |  |  |  |  |     |  |              +--rw tet:te-label
        |  |  |  |  |     |  |                 +--rw (tet:technology)?
        |  |  |  |  |     |  |                 |  +--:(tet:generic)
        |  |  |  |  |     |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |     |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |  |                 +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |  +--rw tet:protection-type?             identityref
        |  |  |  |  |     |  +--rw tet:tunnel-termination-points
        |  |  |  |  |     |  |  +--rw tet:source?        binary
        |  |  |  |  |     |  |  +--rw tet:destination?   binary
        |  |  |  |  |     |  +--rw tet:tunnels
        |  |  |  |  |     |     +--rw tet:sharing?   boolean
        |  |  |  |  |     |     +--rw tet:tunnel* [tunnel-name]
        |  |  |  |  |     |        +--rw tet:tunnel-name    string
        |  |  |  |  |     |        +--rw tet:sharing?       boolean
        |  |  |  |  |     +--rw tet:path-constraints
        |  |  |  |  |     |  +--rw tet:te-bandwidth
        |  |  |  |  |     |  |  +--rw (tet:technology)?
        |  |  |  |  |     |  |     +--:(tet:generic)
        |  |  |  |  |     |  |     |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |     |  |     +--:(ethtetopo:eth)
        |  |  |  |  |     |  |        +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  |     |  +--rw tet:link-protection?          identityref
        |  |  |  |  |     |  +--rw tet:setup-priority?           uint8
        |  |  |  |  |     |  +--rw tet:hold-priority?            uint8
        |  |  |  |  |     |  +--rw tet:signaling-type?           identityref
        |  |  |  |  |     |  +--rw tet:path-metric-bounds
        |  |  |  |  |     |  |  +--rw tet:path-metric-bound* [metric-type]
        |  |  |  |  |     |  |     +--rw tet:metric-type    identityref
        |  |  |  |  |     |  |     +--rw tet:upper-bound?   uint64
        |  |  |  |  |     |  +--rw tet:path-affinities-values
        |  |  |  |  |     |  |  +--rw tet:path-affinities-value* [usage]
        |  |  |  |  |     |  |     +--rw tet:usage    identityref
        |  |  |  |  |     |  |     +--rw tet:value?   admin-groups
        |  |  |  |  |     |  +--rw tet:path-affinity-names
        |  |  |  |  |     |  |  +--rw tet:path-affinity-name* [usage]
        |  |  |  |  |     |  |     +--rw tet:usage            identityref
        |  |  |  |  |     |  |     +--rw tet:affinity-name* [name]
        |  |  |  |  |     |  |        +--rw tet:name    string
        |  |  |  |  |     |  +--rw tet:path-srlgs-lists
        |  |  |  |  |     |  |  +--rw tet:path-srlgs-list* [usage]
        |  |  |  |  |     |  |     +--rw tet:usage     identityref
        |  |  |  |  |     |  |     +--rw tet:values*   srlg
        |  |  |  |  |     |  +--rw tet:path-srlgs-names
        |  |  |  |  |     |  |  +--rw tet:path-srlgs-name* [usage]
        |  |  |  |  |     |  |     +--rw tet:usage    identityref
        |  |  |  |  |     |  |     +--rw tet:names*   string
        |  |  |  |  |     |  +--rw tet:disjointness?             te-path-disjointness
        |  |  |  |  |     +--rw tet:optimizations
        |  |  |  |  |     |  +--rw (tet:algorithm)?
        |  |  |  |  |     |     +--:(tet:metric) {path-optimization-metric}?
        |  |  |  |  |     |     |  +--rw tet:optimization-metric* [metric-type]
        |  |  |  |  |     |     |  |  +--rw tet:metric-type                       identityref
        |  |  |  |  |     |     |  |  +--rw tet:weight?                           uint8
        |  |  |  |  |     |     |  |  +--rw tet:explicit-route-exclude-objects
        |  |  |  |  |     |     |  |  |  +--rw tet:route-object-exclude-object* [index]
        |  |  |  |  |     |     |  |  |     +--rw tet:index                        uint32
        |  |  |  |  |     |     |  |  |     +--rw (tet:type)?
        |  |  |  |  |     |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |     |     |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |     |     |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |     |     |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |     |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |     |     |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |     |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |     |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |     |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |     |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |  |        +--:(tet:as-number)
        |  |  |  |  |     |     |  |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |     |     |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |     |     |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |     |     |  |  |        +--:(tet:label)
        |  |  |  |  |     |     |  |  |        |  +--rw tet:label-hop
        |  |  |  |  |     |     |  |  |        |     +--rw tet:te-label
        |  |  |  |  |     |     |  |  |        |        +--rw (tet:technology)?
        |  |  |  |  |     |     |  |  |        |        |  +--:(tet:generic)
        |  |  |  |  |     |     |  |  |        |        |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  |  |        |        |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |  |  |        |        |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     |  |  |        |        +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |     |  |  |        +--:(tet:srlg)
        |  |  |  |  |     |     |  |  |           +--rw tet:srlg
        |  |  |  |  |     |     |  |  |              +--rw tet:srlg?   uint32
        |  |  |  |  |     |     |  |  +--rw tet:explicit-route-include-objects
        |  |  |  |  |     |     |  |     +--rw tet:route-object-include-object* [index]
        |  |  |  |  |     |     |  |        +--rw tet:index                        uint32
        |  |  |  |  |     |     |  |        +--rw (tet:type)?
        |  |  |  |  |     |     |  |           +--:(tet:numbered-node-hop)
        |  |  |  |  |     |     |  |           |  +--rw tet:numbered-node-hop
        |  |  |  |  |     |     |  |           |     +--rw tet:node-id     te-node-id
        |  |  |  |  |     |     |  |           |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |     |     |  |           +--:(tet:numbered-link-hop)
        |  |  |  |  |     |     |  |           |  +--rw tet:numbered-link-hop
        |  |  |  |  |     |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |     |  |           |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |     |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |           |     +--rw tet:node-id       te-node-id
        |  |  |  |  |     |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |           +--:(tet:as-number)
        |  |  |  |  |     |     |  |           |  +--rw tet:as-number-hop
        |  |  |  |  |     |     |  |           |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |     |     |  |           |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |     |     |  |           +--:(tet:label)
        |  |  |  |  |     |     |  |              +--rw tet:label-hop
        |  |  |  |  |     |     |  |                 +--rw tet:te-label
        |  |  |  |  |     |     |  |                    +--rw (tet:technology)?
        |  |  |  |  |     |     |  |                    |  +--:(tet:generic)
        |  |  |  |  |     |     |  |                    |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |  |                    |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     |  |                    +--rw tet:direction?            te-label-direction
        |  |  |  |  |     |     |  +--rw tet:tiebreakers
        |  |  |  |  |     |     |     +--rw tet:tiebreaker* [tiebreaker-type]
        |  |  |  |  |     |     |        +--rw tet:tiebreaker-type    identityref
        |  |  |  |  |     |     +--:(tet:objective-function) {path-optimization-objective-function}?
        |  |  |  |  |     |        +--rw tet:objective-function
        |  |  |  |  |     |           +--rw tet:objective-function-type?   identityref
        |  |  |  |  |     +--ro tet:path-properties
        |  |  |  |  |        +--ro tet:path-metric* [metric-type]
        |  |  |  |  |        |  +--ro tet:metric-type           identityref
        |  |  |  |  |        |  +--ro tet:accumulative-value?   uint64
        |  |  |  |  |        +--ro tet:path-affinities-values
        |  |  |  |  |        |  +--ro tet:path-affinities-value* [usage]
        |  |  |  |  |        |     +--ro tet:usage    identityref
        |  |  |  |  |        |     +--ro tet:value?   admin-groups
        |  |  |  |  |        +--ro tet:path-affinity-names
        |  |  |  |  |        |  +--ro tet:path-affinity-name* [usage]
        |  |  |  |  |        |     +--ro tet:usage            identityref
        |  |  |  |  |        |     +--ro tet:affinity-name* [name]
        |  |  |  |  |        |        +--ro tet:name    string
        |  |  |  |  |        +--ro tet:path-srlgs-lists
        |  |  |  |  |        |  +--ro tet:path-srlgs-list* [usage]
        |  |  |  |  |        |     +--ro tet:usage     identityref
        |  |  |  |  |        |     +--ro tet:values*   srlg
        |  |  |  |  |        +--ro tet:path-srlgs-names
        |  |  |  |  |        |  +--ro tet:path-srlgs-name* [usage]
        |  |  |  |  |        |     +--ro tet:usage    identityref
        |  |  |  |  |        |     +--ro tet:names*   string
        |  |  |  |  |        +--ro tet:path-route-objects
        |  |  |  |  |           +--ro tet:path-route-object* [index]
        |  |  |  |  |              +--ro tet:index                        uint32
        |  |  |  |  |              +--ro (tet:type)?
        |  |  |  |  |                 +--:(tet:numbered-node-hop)
        |  |  |  |  |                 |  +--ro tet:numbered-node-hop
        |  |  |  |  |                 |     +--ro tet:node-id     te-node-id
        |  |  |  |  |                 |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |                 +--:(tet:numbered-link-hop)
        |  |  |  |  |                 |  +--ro tet:numbered-link-hop
        |  |  |  |  |                 |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |                 |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |                 |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |                 +--:(tet:unnumbered-link-hop)
        |  |  |  |  |                 |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |                 |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |                 |     +--ro tet:node-id       te-node-id
        |  |  |  |  |                 |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |                 |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |                 +--:(tet:as-number)
        |  |  |  |  |                 |  +--ro tet:as-number-hop
        |  |  |  |  |                 |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |                 |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |                 +--:(tet:label)
        |  |  |  |  |                    +--ro tet:label-hop
        |  |  |  |  |                       +--ro tet:te-label
        |  |  |  |  |                          +--ro (tet:technology)?
        |  |  |  |  |                          |  +--:(tet:generic)
        |  |  |  |  |                          |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |                          |  +--:(ethtetopo:eth)
        |  |  |  |  |                          |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |                          +--ro tet:direction?            te-label-direction
        |  |  |  |  +--rw tet:domain-id?               uint32
        |  |  |  |  +--rw tet:is-abstract?             empty
        |  |  |  |  +--rw tet:name?                    string
        |  |  |  |  +--rw tet:signaling-address*       inet:ip-address
        |  |  |  |  +--rw tet:underlay-topology {te-topology-hierarchy}?
        |  |  |  |     +--rw tet:network-ref?   -> /nw:networks/network/network-id
        |  |  |  +--ro tet:oper-status?                   te-types:te-oper-status
        |  |  |  +--ro tet:geolocation
        |  |  |  |  +--ro tet:altitude?    int64
        |  |  |  |  +--ro tet:latitude?    geographic-coordinate-degree
        |  |  |  |  +--ro tet:longitude?   geographic-coordinate-degree
        |  |  |  +--ro tet:is-multi-access-dr?            empty
        |  |  |  +--ro tet:information-source?            te-info-source
        |  |  |  +--ro tet:information-source-instance?   string
        |  |  |  +--ro tet:information-source-state
        |  |  |  |  +--ro tet:credibility-preference?    uint16
        |  |  |  |  +--ro tet:logical-network-element?   string
        |  |  |  |  +--ro tet:network-instance?          string
        |  |  |  |  +--ro tet:topology
        |  |  |  |     +--ro tet:node-ref?      -> /nw:networks/network[nw:network-id=current()/../network-ref]/node/node-id
        |  |  |  |     +--ro tet:network-ref?   -> /nw:networks/network/network-id
        |  |  |  +--ro tet:information-source-entry* [information-source information-source-instance]
        |  |  |  |  +--ro tet:information-source             te-info-source
        |  |  |  |  +--ro tet:information-source-instance    string
        |  |  |  |  +--ro tet:information-source-state
        |  |  |  |  |  +--ro tet:credibility-preference?    uint16
        |  |  |  |  |  +--ro tet:logical-network-element?   string
        |  |  |  |  |  +--ro tet:network-instance?          string
        |  |  |  |  |  +--ro tet:topology
        |  |  |  |  |     +--ro tet:node-ref?      -> /nw:networks/network[nw:network-id=current()/../network-ref]/node/node-id
        |  |  |  |  |     +--ro tet:network-ref?   -> /nw:networks/network/network-id
        |  |  |  |  +--ro tet:connectivity-matrices
        |  |  |  |  |  +--ro tet:number-of-entries?     uint16
        |  |  |  |  |  +--ro tet:label-restrictions
        |  |  |  |  |  |  +--ro tet:label-restriction* [index]
        |  |  |  |  |  |     +--ro tet:restriction?      enumeration
        |  |  |  |  |  |     +--ro tet:index             uint32
        |  |  |  |  |  |     +--ro tet:label-start
        |  |  |  |  |  |     |  +--ro tet:te-label
        |  |  |  |  |  |     |     +--ro (tet:technology)?
        |  |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |  |     |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |  |     +--ro tet:label-end
        |  |  |  |  |  |     |  +--ro tet:te-label
        |  |  |  |  |  |     |     +--ro (tet:technology)?
        |  |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |  |     |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |  |     +--ro tet:label-step
        |  |  |  |  |  |     |  +--ro (tet:technology)?
        |  |  |  |  |  |     |     +--:(tet:generic)
        |  |  |  |  |  |     |     |  +--ro tet:generic?          int32
        |  |  |  |  |  |     |     +--:(ethtetopo:eth)
        |  |  |  |  |  |     |        +--ro ethtetopo:eth-step?   uint16
        |  |  |  |  |  |     +--ro tet:range-bitmap?     yang:hex-string
        |  |  |  |  |  |     +--ro ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |  |     +--ro ethtetopo:priority?   uint8
        |  |  |  |  |  +--ro tet:is-allowed?            boolean
        |  |  |  |  |  +--ro tet:underlay {te-topology-hierarchy}?
        |  |  |  |  |  |  +--ro tet:enabled?                     boolean
        |  |  |  |  |  |  +--ro tet:primary-path
        |  |  |  |  |  |  |  +--ro tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |  |  |  +--ro tet:path-element* [path-element-id]
        |  |  |  |  |  |  |     +--ro tet:path-element-id              uint32
        |  |  |  |  |  |  |     +--ro (tet:type)?
        |  |  |  |  |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |  |        |  +--ro tet:numbered-node-hop
        |  |  |  |  |  |  |        |     +--ro tet:node-id     te-node-id
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |  |        |  +--ro tet:numbered-link-hop
        |  |  |  |  |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |  |        |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--ro tet:node-id       te-node-id
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |  |        |  +--ro tet:as-number-hop
        |  |  |  |  |  |  |        |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |  |  |        +--:(tet:label)
        |  |  |  |  |  |  |           +--ro tet:label-hop
        |  |  |  |  |  |  |              +--ro tet:te-label
        |  |  |  |  |  |  |                 +--ro (tet:technology)?
        |  |  |  |  |  |  |                 |  +--:(tet:generic)
        |  |  |  |  |  |  |                 |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |  |  |                 |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |  |                 +--ro tet:direction?            te-label-direction
        |  |  |  |  |  |  +--ro tet:backup-path* [index]
        |  |  |  |  |  |  |  +--ro tet:index           uint32
        |  |  |  |  |  |  |  +--ro tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |  |  |  +--ro tet:path-element* [path-element-id]
        |  |  |  |  |  |  |     +--ro tet:path-element-id              uint32
        |  |  |  |  |  |  |     +--ro (tet:type)?
        |  |  |  |  |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |  |        |  +--ro tet:numbered-node-hop
        |  |  |  |  |  |  |        |     +--ro tet:node-id     te-node-id
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |  |        |  +--ro tet:numbered-link-hop
        |  |  |  |  |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |  |        |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |  |        |     +--ro tet:node-id       te-node-id
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |  |        |  +--ro tet:as-number-hop
        |  |  |  |  |  |  |        |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |  |  |        |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |  |  |        +--:(tet:label)
        |  |  |  |  |  |  |           +--ro tet:label-hop
        |  |  |  |  |  |  |              +--ro tet:te-label
        |  |  |  |  |  |  |                 +--ro (tet:technology)?
        |  |  |  |  |  |  |                 |  +--:(tet:generic)
        |  |  |  |  |  |  |                 |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |  |  |                 |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |  |                 +--ro tet:direction?            te-label-direction
        |  |  |  |  |  |  +--ro tet:protection-type?             identityref
        |  |  |  |  |  |  +--ro tet:tunnel-termination-points
        |  |  |  |  |  |  |  +--ro tet:source?        binary
        |  |  |  |  |  |  |  +--ro tet:destination?   binary
        |  |  |  |  |  |  +--ro tet:tunnels
        |  |  |  |  |  |     +--ro tet:sharing?   boolean
        |  |  |  |  |  |     +--ro tet:tunnel* [tunnel-name]
        |  |  |  |  |  |        +--ro tet:tunnel-name    string
        |  |  |  |  |  |        +--ro tet:sharing?       boolean
        |  |  |  |  |  +--ro tet:path-constraints
        |  |  |  |  |  |  +--ro tet:te-bandwidth
        |  |  |  |  |  |  |  +--ro (tet:technology)?
        |  |  |  |  |  |  |     +--:(tet:generic)
        |  |  |  |  |  |  |     |  +--ro tet:generic?               te-bandwidth
        |  |  |  |  |  |  |     +--:(ethtetopo:eth)
        |  |  |  |  |  |  |        +--ro ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  |  |  +--ro tet:link-protection?          identityref
        |  |  |  |  |  |  +--ro tet:setup-priority?           uint8
        |  |  |  |  |  |  +--ro tet:hold-priority?            uint8
        |  |  |  |  |  |  +--ro tet:signaling-type?           identityref
        |  |  |  |  |  |  +--ro tet:path-metric-bounds
        |  |  |  |  |  |  |  +--ro tet:path-metric-bound* [metric-type]
        |  |  |  |  |  |  |     +--ro tet:metric-type    identityref
        |  |  |  |  |  |  |     +--ro tet:upper-bound?   uint64
        |  |  |  |  |  |  +--ro tet:path-affinities-values
        |  |  |  |  |  |  |  +--ro tet:path-affinities-value* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage    identityref
        |  |  |  |  |  |  |     +--ro tet:value?   admin-groups
        |  |  |  |  |  |  +--ro tet:path-affinity-names
        |  |  |  |  |  |  |  +--ro tet:path-affinity-name* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage            identityref
        |  |  |  |  |  |  |     +--ro tet:affinity-name* [name]
        |  |  |  |  |  |  |        +--ro tet:name    string
        |  |  |  |  |  |  +--ro tet:path-srlgs-lists
        |  |  |  |  |  |  |  +--ro tet:path-srlgs-list* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage     identityref
        |  |  |  |  |  |  |     +--ro tet:values*   srlg
        |  |  |  |  |  |  +--ro tet:path-srlgs-names
        |  |  |  |  |  |  |  +--ro tet:path-srlgs-name* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage    identityref
        |  |  |  |  |  |  |     +--ro tet:names*   string
        |  |  |  |  |  |  +--ro tet:disjointness?             te-path-disjointness
        |  |  |  |  |  +--ro tet:optimizations
        |  |  |  |  |  |  +--ro (tet:algorithm)?
        |  |  |  |  |  |     +--:(tet:metric) {path-optimization-metric}?
        |  |  |  |  |  |     |  +--ro tet:optimization-metric* [metric-type]
        |  |  |  |  |  |     |  |  +--ro tet:metric-type                       identityref
        |  |  |  |  |  |     |  |  +--ro tet:weight?                           uint8
        |  |  |  |  |  |     |  |  +--ro tet:explicit-route-exclude-objects
        |  |  |  |  |  |     |  |  |  +--ro tet:route-object-exclude-object* [index]
        |  |  |  |  |  |     |  |  |     +--ro tet:index                        uint32
        |  |  |  |  |  |     |  |  |     +--ro (tet:type)?
        |  |  |  |  |  |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |     |  |  |        |  +--ro tet:numbered-node-hop
        |  |  |  |  |  |     |  |  |        |     +--ro tet:node-id     te-node-id
        |  |  |  |  |  |     |  |  |        |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |  |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |     |  |  |        |  +--ro tet:numbered-link-hop
        |  |  |  |  |  |     |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |     |  |  |        |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |  |     |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |  |        |     +--ro tet:node-id       te-node-id
        |  |  |  |  |  |     |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |     |  |  |        |  +--ro tet:as-number-hop
        |  |  |  |  |  |     |  |  |        |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |  |     |  |  |        |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |  |     |  |  |        +--:(tet:label)
        |  |  |  |  |  |     |  |  |        |  +--ro tet:label-hop
        |  |  |  |  |  |     |  |  |        |     +--ro tet:te-label
        |  |  |  |  |  |     |  |  |        |        +--ro (tet:technology)?
        |  |  |  |  |  |     |  |  |        |        |  +--:(tet:generic)
        |  |  |  |  |  |     |  |  |        |        |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |  |  |        |        |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |  |  |        |        |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |  |  |        |        +--ro tet:direction?            te-label-direction
        |  |  |  |  |  |     |  |  |        +--:(tet:srlg)
        |  |  |  |  |  |     |  |  |           +--ro tet:srlg
        |  |  |  |  |  |     |  |  |              +--ro tet:srlg?   uint32
        |  |  |  |  |  |     |  |  +--ro tet:explicit-route-include-objects
        |  |  |  |  |  |     |  |     +--ro tet:route-object-include-object* [index]
        |  |  |  |  |  |     |  |        +--ro tet:index                        uint32
        |  |  |  |  |  |     |  |        +--ro (tet:type)?
        |  |  |  |  |  |     |  |           +--:(tet:numbered-node-hop)
        |  |  |  |  |  |     |  |           |  +--ro tet:numbered-node-hop
        |  |  |  |  |  |     |  |           |     +--ro tet:node-id     te-node-id
        |  |  |  |  |  |     |  |           |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |  |     |  |           +--:(tet:numbered-link-hop)
        |  |  |  |  |  |     |  |           |  +--ro tet:numbered-link-hop
        |  |  |  |  |  |     |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |     |  |           |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |  |     |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |     |  |           |     +--ro tet:node-id       te-node-id
        |  |  |  |  |  |     |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |     |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |     |  |           +--:(tet:as-number)
        |  |  |  |  |  |     |  |           |  +--ro tet:as-number-hop
        |  |  |  |  |  |     |  |           |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |  |     |  |           |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |  |     |  |           +--:(tet:label)
        |  |  |  |  |  |     |  |              +--ro tet:label-hop
        |  |  |  |  |  |     |  |                 +--ro tet:te-label
        |  |  |  |  |  |     |  |                    +--ro (tet:technology)?
        |  |  |  |  |  |     |  |                    |  +--:(tet:generic)
        |  |  |  |  |  |     |  |                    |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |  |  |  |     |  |                    |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |     |  |                    +--ro tet:direction?            te-label-direction
        |  |  |  |  |  |     |  +--ro tet:tiebreakers
        |  |  |  |  |  |     |     +--ro tet:tiebreaker* [tiebreaker-type]
        |  |  |  |  |  |     |        +--ro tet:tiebreaker-type    identityref
        |  |  |  |  |  |     +--:(tet:objective-function) {path-optimization-objective-function}?
        |  |  |  |  |  |        +--ro tet:objective-function
        |  |  |  |  |  |           +--ro tet:objective-function-type?   identityref
        |  |  |  |  |  +--ro tet:path-properties
        |  |  |  |  |  |  +--ro tet:path-metric* [metric-type]
        |  |  |  |  |  |  |  +--ro tet:metric-type           identityref
        |  |  |  |  |  |  |  +--ro tet:accumulative-value?   uint64
        |  |  |  |  |  |  +--ro tet:path-affinities-values
        |  |  |  |  |  |  |  +--ro tet:path-affinities-value* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage    identityref
        |  |  |  |  |  |  |     +--ro tet:value?   admin-groups
        |  |  |  |  |  |  +--ro tet:path-affinity-names
        |  |  |  |  |  |  |  +--ro tet:path-affinity-name* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage            identityref
        |  |  |  |  |  |  |     +--ro tet:affinity-name* [name]
        |  |  |  |  |  |  |        +--ro tet:name    string
        |  |  |  |  |  |  +--ro tet:path-srlgs-lists
        |  |  |  |  |  |  |  +--ro tet:path-srlgs-list* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage     identityref
        |  |  |  |  |  |  |     +--ro tet:values*   srlg
        |  |  |  |  |  |  +--ro tet:path-srlgs-names
        |  |  |  |  |  |  |  +--ro tet:path-srlgs-name* [usage]
        |  |  |  |  |  |  |     +--ro tet:usage    identityref
        |  |  |  |  |  |  |     +--ro tet:names*   string
        |  |  |  |  |  |  +--ro tet:path-route-objects
        |  |  |  |  |  |     +--ro tet:path-route-object* [index]
        |  |  |  |  |  |        +--ro tet:index                        uint32
        |  |  |  |  |  |        +--ro (tet:type)?
        |  |  |  |  |  |           +--:(tet:numbered-node-hop)
        |  |  |  |  |  |           |  +--ro tet:numbered-node-hop
        |  |  |  |  |  |           |     +--ro tet:node-id     te-node-id
        |  |  |  |  |  |           |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |  |           +--:(tet:numbered-link-hop)
        |  |  |  |  |  |           |  +--ro tet:numbered-link-hop
        |  |  |  |  |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |           +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |           |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |  |           |     +--ro tet:node-id       te-node-id
        |  |  |  |  |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |  |           +--:(tet:as-number)
        |  |  |  |  |  |           |  +--ro tet:as-number-hop
        |  |  |  |  |  |           |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |  |           |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |  |           +--:(tet:label)
        |  |  |  |  |  |              +--ro tet:label-hop
        |  |  |  |  |  |                 +--ro tet:te-label
        |  |  |  |  |  |                    +--ro (tet:technology)?
        |  |  |  |  |  |                    |  +--:(tet:generic)
        |  |  |  |  |  |                    |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |                    |  +--:(ethtetopo:eth)
        |  |  |  |  |  |                    |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |                    +--ro tet:direction?            te-label-direction
        |  |  |  |  |  +--ro tet:connectivity-matrix* [id]
        |  |  |  |  |     +--ro tet:id                  uint32
        |  |  |  |  |     +--ro tet:from
        |  |  |  |  |     |  +--ro tet:tp-ref?               -> ../../../../../../nt:termination-point/tp-id
        |  |  |  |  |     |  +--ro tet:label-restrictions
        |  |  |  |  |     |     +--ro tet:label-restriction* [index]
        |  |  |  |  |     |        +--ro tet:restriction?      enumeration
        |  |  |  |  |     |        +--ro tet:index             uint32
        |  |  |  |  |     |        +--ro tet:label-start
        |  |  |  |  |     |        |  +--ro tet:te-label
        |  |  |  |  |     |        |     +--ro (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |        +--ro tet:label-end
        |  |  |  |  |     |        |  +--ro tet:te-label
        |  |  |  |  |     |        |     +--ro (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |        +--ro tet:label-step
        |  |  |  |  |     |        |  +--ro (tet:technology)?
        |  |  |  |  |     |        |     +--:(tet:generic)
        |  |  |  |  |     |        |     |  +--ro tet:generic?          int32
        |  |  |  |  |     |        |     +--:(ethtetopo:eth)
        |  |  |  |  |     |        |        +--ro ethtetopo:eth-step?   uint16
        |  |  |  |  |     |        +--ro tet:range-bitmap?     yang:hex-string
        |  |  |  |  |     |        +--ro ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |     |        +--ro ethtetopo:priority?   uint8
        |  |  |  |  |     +--ro tet:to
        |  |  |  |  |     |  +--ro tet:tp-ref?               -> ../../../../../../nt:termination-point/tp-id
        |  |  |  |  |     |  +--ro tet:label-restrictions
        |  |  |  |  |     |     +--ro tet:label-restriction* [index]
        |  |  |  |  |     |        +--ro tet:restriction?      enumeration
        |  |  |  |  |     |        +--ro tet:index             uint32
        |  |  |  |  |     |        +--ro tet:label-start
        |  |  |  |  |     |        |  +--ro tet:te-label
        |  |  |  |  |     |        |     +--ro (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |        +--ro tet:label-end
        |  |  |  |  |     |        |  +--ro tet:te-label
        |  |  |  |  |     |        |     +--ro (tet:technology)?
        |  |  |  |  |     |        |     |  +--:(tet:generic)
        |  |  |  |  |     |        |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |        |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |        |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |        |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |        +--ro tet:label-step
        |  |  |  |  |     |        |  +--ro (tet:technology)?
        |  |  |  |  |     |        |     +--:(tet:generic)
        |  |  |  |  |     |        |     |  +--ro tet:generic?          int32
        |  |  |  |  |     |        |     +--:(ethtetopo:eth)
        |  |  |  |  |     |        |        +--ro ethtetopo:eth-step?   uint16
        |  |  |  |  |     |        +--ro tet:range-bitmap?     yang:hex-string
        |  |  |  |  |     |        +--ro ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |     |        +--ro ethtetopo:priority?   uint8
        |  |  |  |  |     +--ro tet:is-allowed?         boolean
        |  |  |  |  |     +--ro tet:underlay {te-topology-hierarchy}?
        |  |  |  |  |     |  +--ro tet:enabled?                     boolean
        |  |  |  |  |     |  +--ro tet:primary-path
        |  |  |  |  |     |  |  +--ro tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |     |  |  +--ro tet:path-element* [path-element-id]
        |  |  |  |  |     |  |     +--ro tet:path-element-id              uint32
        |  |  |  |  |     |  |     +--ro (tet:type)?
        |  |  |  |  |     |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |     |  |        |  +--ro tet:numbered-node-hop
        |  |  |  |  |     |  |        |     +--ro tet:node-id     te-node-id
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |     |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |     |  |        |  +--ro tet:numbered-link-hop
        |  |  |  |  |     |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |  |        |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |     |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--ro tet:node-id       te-node-id
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:as-number)
        |  |  |  |  |     |  |        |  +--ro tet:as-number-hop
        |  |  |  |  |     |  |        |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |     |  |        +--:(tet:label)
        |  |  |  |  |     |  |           +--ro tet:label-hop
        |  |  |  |  |     |  |              +--ro tet:te-label
        |  |  |  |  |     |  |                 +--ro (tet:technology)?
        |  |  |  |  |     |  |                 |  +--:(tet:generic)
        |  |  |  |  |     |  |                 |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |     |  |                 |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |  |                 +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |  +--ro tet:backup-path* [index]
        |  |  |  |  |     |  |  +--ro tet:index           uint32
        |  |  |  |  |     |  |  +--ro tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |     |  |  +--ro tet:path-element* [path-element-id]
        |  |  |  |  |     |  |     +--ro tet:path-element-id              uint32
        |  |  |  |  |     |  |     +--ro (tet:type)?
        |  |  |  |  |     |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |     |  |        |  +--ro tet:numbered-node-hop
        |  |  |  |  |     |  |        |     +--ro tet:node-id     te-node-id
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |     |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |     |  |        |  +--ro tet:numbered-link-hop
        |  |  |  |  |     |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |  |        |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |     |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |  |        |     +--ro tet:node-id       te-node-id
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |  |        +--:(tet:as-number)
        |  |  |  |  |     |  |        |  +--ro tet:as-number-hop
        |  |  |  |  |     |  |        |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |     |  |        |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |     |  |        +--:(tet:label)
        |  |  |  |  |     |  |           +--ro tet:label-hop
        |  |  |  |  |     |  |              +--ro tet:te-label
        |  |  |  |  |     |  |                 +--ro (tet:technology)?
        |  |  |  |  |     |  |                 |  +--:(tet:generic)
        |  |  |  |  |     |  |                 |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |     |  |                 |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |  |                 +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |  +--ro tet:protection-type?             identityref
        |  |  |  |  |     |  +--ro tet:tunnel-termination-points
        |  |  |  |  |     |  |  +--ro tet:source?        binary
        |  |  |  |  |     |  |  +--ro tet:destination?   binary
        |  |  |  |  |     |  +--ro tet:tunnels
        |  |  |  |  |     |     +--ro tet:sharing?   boolean
        |  |  |  |  |     |     +--ro tet:tunnel* [tunnel-name]
        |  |  |  |  |     |        +--ro tet:tunnel-name    string
        |  |  |  |  |     |        +--ro tet:sharing?       boolean
        |  |  |  |  |     +--ro tet:path-constraints
        |  |  |  |  |     |  +--ro tet:te-bandwidth
        |  |  |  |  |     |  |  +--ro (tet:technology)?
        |  |  |  |  |     |  |     +--:(tet:generic)
        |  |  |  |  |     |  |     |  +--ro tet:generic?               te-bandwidth
        |  |  |  |  |     |  |     +--:(ethtetopo:eth)
        |  |  |  |  |     |  |        +--ro ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  |     |  +--ro tet:link-protection?          identityref
        |  |  |  |  |     |  +--ro tet:setup-priority?           uint8
        |  |  |  |  |     |  +--ro tet:hold-priority?            uint8
        |  |  |  |  |     |  +--ro tet:signaling-type?           identityref
        |  |  |  |  |     |  +--ro tet:path-metric-bounds
        |  |  |  |  |     |  |  +--ro tet:path-metric-bound* [metric-type]
        |  |  |  |  |     |  |     +--ro tet:metric-type    identityref
        |  |  |  |  |     |  |     +--ro tet:upper-bound?   uint64
        |  |  |  |  |     |  +--ro tet:path-affinities-values
        |  |  |  |  |     |  |  +--ro tet:path-affinities-value* [usage]
        |  |  |  |  |     |  |     +--ro tet:usage    identityref
        |  |  |  |  |     |  |     +--ro tet:value?   admin-groups
        |  |  |  |  |     |  +--ro tet:path-affinity-names
        |  |  |  |  |     |  |  +--ro tet:path-affinity-name* [usage]
        |  |  |  |  |     |  |     +--ro tet:usage            identityref
        |  |  |  |  |     |  |     +--ro tet:affinity-name* [name]
        |  |  |  |  |     |  |        +--ro tet:name    string
        |  |  |  |  |     |  +--ro tet:path-srlgs-lists
        |  |  |  |  |     |  |  +--ro tet:path-srlgs-list* [usage]
        |  |  |  |  |     |  |     +--ro tet:usage     identityref
        |  |  |  |  |     |  |     +--ro tet:values*   srlg
        |  |  |  |  |     |  +--ro tet:path-srlgs-names
        |  |  |  |  |     |  |  +--ro tet:path-srlgs-name* [usage]
        |  |  |  |  |     |  |     +--ro tet:usage    identityref
        |  |  |  |  |     |  |     +--ro tet:names*   string
        |  |  |  |  |     |  +--ro tet:disjointness?             te-path-disjointness
        |  |  |  |  |     +--ro tet:optimizations
        |  |  |  |  |     |  +--ro (tet:algorithm)?
        |  |  |  |  |     |     +--:(tet:metric) {path-optimization-metric}?
        |  |  |  |  |     |     |  +--ro tet:optimization-metric* [metric-type]
        |  |  |  |  |     |     |  |  +--ro tet:metric-type                       identityref
        |  |  |  |  |     |     |  |  +--ro tet:weight?                           uint8
        |  |  |  |  |     |     |  |  +--ro tet:explicit-route-exclude-objects
        |  |  |  |  |     |     |  |  |  +--ro tet:route-object-exclude-object* [index]
        |  |  |  |  |     |     |  |  |     +--ro tet:index                        uint32
        |  |  |  |  |     |     |  |  |     +--ro (tet:type)?
        |  |  |  |  |     |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |     |     |  |  |        |  +--ro tet:numbered-node-hop
        |  |  |  |  |     |     |  |  |        |     +--ro tet:node-id     te-node-id
        |  |  |  |  |     |     |  |  |        |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |     |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |     |     |  |  |        |  +--ro tet:numbered-link-hop
        |  |  |  |  |     |     |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |     |  |  |        |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |     |     |  |  |        |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |  |        |     +--ro tet:node-id       te-node-id
        |  |  |  |  |     |     |  |  |        |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |  |        |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |  |        +--:(tet:as-number)
        |  |  |  |  |     |     |  |  |        |  +--ro tet:as-number-hop
        |  |  |  |  |     |     |  |  |        |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |     |     |  |  |        |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |     |     |  |  |        +--:(tet:label)
        |  |  |  |  |     |     |  |  |        |  +--ro tet:label-hop
        |  |  |  |  |     |     |  |  |        |     +--ro tet:te-label
        |  |  |  |  |     |     |  |  |        |        +--ro (tet:technology)?
        |  |  |  |  |     |     |  |  |        |        |  +--:(tet:generic)
        |  |  |  |  |     |     |  |  |        |        |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  |  |        |        |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |  |  |        |        |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     |  |  |        |        +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |     |  |  |        +--:(tet:srlg)
        |  |  |  |  |     |     |  |  |           +--ro tet:srlg
        |  |  |  |  |     |     |  |  |              +--ro tet:srlg?   uint32
        |  |  |  |  |     |     |  |  +--ro tet:explicit-route-include-objects
        |  |  |  |  |     |     |  |     +--ro tet:route-object-include-object* [index]
        |  |  |  |  |     |     |  |        +--ro tet:index                        uint32
        |  |  |  |  |     |     |  |        +--ro (tet:type)?
        |  |  |  |  |     |     |  |           +--:(tet:numbered-node-hop)
        |  |  |  |  |     |     |  |           |  +--ro tet:numbered-node-hop
        |  |  |  |  |     |     |  |           |     +--ro tet:node-id     te-node-id
        |  |  |  |  |     |     |  |           |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |     |     |  |           +--:(tet:numbered-link-hop)
        |  |  |  |  |     |     |  |           |  +--ro tet:numbered-link-hop
        |  |  |  |  |     |     |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |  |  |     |     |  |           |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |     |     |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |     |     |  |           |     +--ro tet:node-id       te-node-id
        |  |  |  |  |     |     |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |     |     |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |     |     |  |           +--:(tet:as-number)
        |  |  |  |  |     |     |  |           |  +--ro tet:as-number-hop
        |  |  |  |  |     |     |  |           |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |     |     |  |           |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |     |     |  |           +--:(tet:label)
        |  |  |  |  |     |     |  |              +--ro tet:label-hop
        |  |  |  |  |     |     |  |                 +--ro tet:te-label
        |  |  |  |  |     |     |  |                    +--ro (tet:technology)?
        |  |  |  |  |     |     |  |                    |  +--:(tet:generic)
        |  |  |  |  |     |     |  |                    |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |  |                    |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     |  |                    +--ro tet:direction?            te-label-direction
        |  |  |  |  |     |     |  +--ro tet:tiebreakers
        |  |  |  |  |     |     |     +--ro tet:tiebreaker* [tiebreaker-type]
        |  |  |  |  |     |     |        +--ro tet:tiebreaker-type    identityref
        |  |  |  |  |     |     +--:(tet:objective-function) {path-optimization-objective-function}?
        |  |  |  |  |     |        +--ro tet:objective-function
        |  |  |  |  |     |           +--ro tet:objective-function-type?   identityref
        |  |  |  |  |     +--ro tet:path-properties
        |  |  |  |  |        +--ro tet:path-metric* [metric-type]
        |  |  |  |  |        |  +--ro tet:metric-type           identityref
        |  |  |  |  |        |  +--ro tet:accumulative-value?   uint64
        |  |  |  |  |        +--ro tet:path-affinities-values
        |  |  |  |  |        |  +--ro tet:path-affinities-value* [usage]
        |  |  |  |  |        |     +--ro tet:usage    identityref
        |  |  |  |  |        |     +--ro tet:value?   admin-groups
        |  |  |  |  |        +--ro tet:path-affinity-names
        |  |  |  |  |        |  +--ro tet:path-affinity-name* [usage]
        |  |  |  |  |        |     +--ro tet:usage            identityref
        |  |  |  |  |        |     +--ro tet:affinity-name* [name]
        |  |  |  |  |        |        +--ro tet:name    string
        |  |  |  |  |        +--ro tet:path-srlgs-lists
        |  |  |  |  |        |  +--ro tet:path-srlgs-list* [usage]
        |  |  |  |  |        |     +--ro tet:usage     identityref
        |  |  |  |  |        |     +--ro tet:values*   srlg
        |  |  |  |  |        +--ro tet:path-srlgs-names
        |  |  |  |  |        |  +--ro tet:path-srlgs-name* [usage]
        |  |  |  |  |        |     +--ro tet:usage    identityref
        |  |  |  |  |        |     +--ro tet:names*   string
        |  |  |  |  |        +--ro tet:path-route-objects
        |  |  |  |  |           +--ro tet:path-route-object* [index]
        |  |  |  |  |              +--ro tet:index                        uint32
        |  |  |  |  |              +--ro (tet:type)?
        |  |  |  |  |                 +--:(tet:numbered-node-hop)
        |  |  |  |  |                 |  +--ro tet:numbered-node-hop
        |  |  |  |  |                 |     +--ro tet:node-id     te-node-id
        |  |  |  |  |                 |     +--ro tet:hop-type?   te-hop-type
        |  |  |  |  |                 +--:(tet:numbered-link-hop)
        |  |  |  |  |                 |  +--ro tet:numbered-link-hop
        |  |  |  |  |                 |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |                 |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |                 |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |                 +--:(tet:unnumbered-link-hop)
        |  |  |  |  |                 |  +--ro tet:unnumbered-link-hop
        |  |  |  |  |                 |     +--ro tet:link-tp-id    te-tp-id
        |  |  |  |  |                 |     +--ro tet:node-id       te-node-id
        |  |  |  |  |                 |     +--ro tet:hop-type?     te-hop-type
        |  |  |  |  |                 |     +--ro tet:direction?    te-link-direction
        |  |  |  |  |                 +--:(tet:as-number)
        |  |  |  |  |                 |  +--ro tet:as-number-hop
        |  |  |  |  |                 |     +--ro tet:as-number    inet:as-number
        |  |  |  |  |                 |     +--ro tet:hop-type?    te-hop-type
        |  |  |  |  |                 +--:(tet:label)
        |  |  |  |  |                    +--ro tet:label-hop
        |  |  |  |  |                       +--ro tet:te-label
        |  |  |  |  |                          +--ro (tet:technology)?
        |  |  |  |  |                          |  +--:(tet:generic)
        |  |  |  |  |                          |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |                          |  +--:(ethtetopo:eth)
        |  |  |  |  |                          |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |                          +--ro tet:direction?            te-label-direction
        |  |  |  |  +--ro tet:domain-id?                     uint32
        |  |  |  |  +--ro tet:is-abstract?                   empty
        |  |  |  |  +--ro tet:name?                          string
        |  |  |  |  +--ro tet:signaling-address*             inet:ip-address
        |  |  |  |  +--ro tet:underlay-topology {te-topology-hierarchy}?
        |  |  |  |     +--ro tet:network-ref?   -> /nw:networks/network/network-id
        |  |  |  +--ro tet:statistics
        |  |  |  |  +--ro tet:discontinuity-time?          yang:date-and-time
        |  |  |  |  +--ro tet:node
        |  |  |  |  |  +--ro tet:disables?             yang:counter32
        |  |  |  |  |  +--ro tet:enables?              yang:counter32
        |  |  |  |  |  +--ro tet:maintenance-sets?     yang:counter32
        |  |  |  |  |  +--ro tet:maintenance-clears?   yang:counter32
        |  |  |  |  |  +--ro tet:modifies?             yang:counter32
        |  |  |  |  +--ro tet:connectivity-matrix-entry
        |  |  |  |     +--ro tet:creates?    yang:counter32
        |  |  |  |     +--ro tet:deletes?    yang:counter32
        |  |  |  |     +--ro tet:disables?   yang:counter32
        |  |  |  |     +--ro tet:enables?    yang:counter32
        |  |  |  |     +--ro tet:modifies?   yang:counter32
        |  |  |  +--rw tet:tunnel-termination-point* [tunnel-tp-id]
        |  |  |     +--rw tet:tunnel-tp-id                           binary
        |  |  |     +--rw tet:admin-status?                          te-types:te-admin-status
        |  |  |     +--rw tet:name?                                  string
        |  |  |     +--rw tet:switching-capability?                  identityref
        |  |  |     +--rw tet:encoding?                              identityref
        |  |  |     +--rw tet:inter-layer-lock-id*                   uint32
        |  |  |     +--rw tet:protection-type?                       identityref
        |  |  |     +--rw tet:client-layer-adaptation
        |  |  |     |  +--rw tet:switching-capability* [switching-capability encoding]
        |  |  |     |     +--rw tet:switching-capability    identityref
        |  |  |     |     +--rw tet:encoding                identityref
        |  |  |     |     +--rw tet:te-bandwidth
        |  |  |     |        +--rw (tet:technology)?
        |  |  |     |           +--:(tet:generic)
        |  |  |     |           |  +--rw tet:generic?               te-bandwidth
        |  |  |     |           +--:(ethtetopo:eth)
        |  |  |     |              +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |     +--rw tet:local-link-connectivities
        |  |  |     |  +--rw tet:number-of-entries?         uint16
        |  |  |     |  +--rw tet:label-restrictions
        |  |  |     |  |  +--rw tet:label-restriction* [index]
        |  |  |     |  |     +--rw tet:restriction?      enumeration
        |  |  |     |  |     +--rw tet:index             uint32
        |  |  |     |  |     +--rw tet:label-start
        |  |  |     |  |     |  +--rw tet:te-label
        |  |  |     |  |     |     +--rw (tet:technology)?
        |  |  |     |  |     |     |  +--:(tet:generic)
        |  |  |     |  |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |  |     |     |  +--:(ethtetopo:eth)
        |  |  |     |  |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |     |     +--rw tet:direction?            te-label-direction
        |  |  |     |  |     +--rw tet:label-end
        |  |  |     |  |     |  +--rw tet:te-label
        |  |  |     |  |     |     +--rw (tet:technology)?
        |  |  |     |  |     |     |  +--:(tet:generic)
        |  |  |     |  |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |  |     |     |  +--:(ethtetopo:eth)
        |  |  |     |  |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |     |     +--rw tet:direction?            te-label-direction
        |  |  |     |  |     +--rw tet:label-step
        |  |  |     |  |     |  +--rw (tet:technology)?
        |  |  |     |  |     |     +--:(tet:generic)
        |  |  |     |  |     |     |  +--rw tet:generic?          int32
        |  |  |     |  |     |     +--:(ethtetopo:eth)
        |  |  |     |  |     |        +--rw ethtetopo:eth-step?   uint16
        |  |  |     |  |     +--rw tet:range-bitmap?     yang:hex-string
        |  |  |     |  |     +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |     |  |     +--rw ethtetopo:priority?   uint8
        |  |  |     |  +--rw tet:is-allowed?                boolean
        |  |  |     |  +--rw tet:underlay {te-topology-hierarchy}?
        |  |  |     |  |  +--rw tet:enabled?                     boolean
        |  |  |     |  |  +--rw tet:primary-path
        |  |  |     |  |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |     |  |  |  +--rw tet:path-element* [path-element-id]
        |  |  |     |  |  |     +--rw tet:path-element-id              uint32
        |  |  |     |  |  |     +--rw (tet:type)?
        |  |  |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |     |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |     |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |     |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |     |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |     |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |  |        +--:(tet:as-number)
        |  |  |     |  |  |        |  +--rw tet:as-number-hop
        |  |  |     |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |     |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |  |  |        +--:(tet:label)
        |  |  |     |  |  |           +--rw tet:label-hop
        |  |  |     |  |  |              +--rw tet:te-label
        |  |  |     |  |  |                 +--rw (tet:technology)?
        |  |  |     |  |  |                 |  +--:(tet:generic)
        |  |  |     |  |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |     |  |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |  |                 +--rw tet:direction?            te-label-direction
        |  |  |     |  |  +--rw tet:backup-path* [index]
        |  |  |     |  |  |  +--rw tet:index           uint32
        |  |  |     |  |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |     |  |  |  +--rw tet:path-element* [path-element-id]
        |  |  |     |  |  |     +--rw tet:path-element-id              uint32
        |  |  |     |  |  |     +--rw (tet:type)?
        |  |  |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |     |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |     |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |     |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |     |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |     |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |  |        +--:(tet:as-number)
        |  |  |     |  |  |        |  +--rw tet:as-number-hop
        |  |  |     |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |     |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |  |  |        +--:(tet:label)
        |  |  |     |  |  |           +--rw tet:label-hop
        |  |  |     |  |  |              +--rw tet:te-label
        |  |  |     |  |  |                 +--rw (tet:technology)?
        |  |  |     |  |  |                 |  +--:(tet:generic)
        |  |  |     |  |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |     |  |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |  |                 +--rw tet:direction?            te-label-direction
        |  |  |     |  |  +--rw tet:protection-type?             identityref
        |  |  |     |  |  +--rw tet:tunnel-termination-points
        |  |  |     |  |  |  +--rw tet:source?        binary
        |  |  |     |  |  |  +--rw tet:destination?   binary
        |  |  |     |  |  +--rw tet:tunnels
        |  |  |     |  |     +--rw tet:sharing?   boolean
        |  |  |     |  |     +--rw tet:tunnel* [tunnel-name]
        |  |  |     |  |        +--rw tet:tunnel-name    string
        |  |  |     |  |        +--rw tet:sharing?       boolean
        |  |  |     |  +--rw tet:path-constraints
        |  |  |     |  |  +--rw tet:te-bandwidth
        |  |  |     |  |  |  +--rw (tet:technology)?
        |  |  |     |  |  |     +--:(tet:generic)
        |  |  |     |  |  |     |  +--rw tet:generic?               te-bandwidth
        |  |  |     |  |  |     +--:(ethtetopo:eth)
        |  |  |     |  |  |        +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |     |  |  +--rw tet:link-protection?          identityref
        |  |  |     |  |  +--rw tet:setup-priority?           uint8
        |  |  |     |  |  +--rw tet:hold-priority?            uint8
        |  |  |     |  |  +--rw tet:signaling-type?           identityref
        |  |  |     |  |  +--rw tet:path-metric-bounds
        |  |  |     |  |  |  +--rw tet:path-metric-bound* [metric-type]
        |  |  |     |  |  |     +--rw tet:metric-type    identityref
        |  |  |     |  |  |     +--rw tet:upper-bound?   uint64
        |  |  |     |  |  +--rw tet:path-affinities-values
        |  |  |     |  |  |  +--rw tet:path-affinities-value* [usage]
        |  |  |     |  |  |     +--rw tet:usage    identityref
        |  |  |     |  |  |     +--rw tet:value?   admin-groups
        |  |  |     |  |  +--rw tet:path-affinity-names
        |  |  |     |  |  |  +--rw tet:path-affinity-name* [usage]
        |  |  |     |  |  |     +--rw tet:usage            identityref
        |  |  |     |  |  |     +--rw tet:affinity-name* [name]
        |  |  |     |  |  |        +--rw tet:name    string
        |  |  |     |  |  +--rw tet:path-srlgs-lists
        |  |  |     |  |  |  +--rw tet:path-srlgs-list* [usage]
        |  |  |     |  |  |     +--rw tet:usage     identityref
        |  |  |     |  |  |     +--rw tet:values*   srlg
        |  |  |     |  |  +--rw tet:path-srlgs-names
        |  |  |     |  |  |  +--rw tet:path-srlgs-name* [usage]
        |  |  |     |  |  |     +--rw tet:usage    identityref
        |  |  |     |  |  |     +--rw tet:names*   string
        |  |  |     |  |  +--rw tet:disjointness?             te-path-disjointness
        |  |  |     |  +--rw tet:optimizations
        |  |  |     |  |  +--rw (tet:algorithm)?
        |  |  |     |  |     +--:(tet:metric) {path-optimization-metric}?
        |  |  |     |  |     |  +--rw tet:optimization-metric* [metric-type]
        |  |  |     |  |     |  |  +--rw tet:metric-type                       identityref
        |  |  |     |  |     |  |  +--rw tet:weight?                           uint8
        |  |  |     |  |     |  |  +--rw tet:explicit-route-exclude-objects
        |  |  |     |  |     |  |  |  +--rw tet:route-object-exclude-object* [index]
        |  |  |     |  |     |  |  |     +--rw tet:index                        uint32
        |  |  |     |  |     |  |  |     +--rw (tet:type)?
        |  |  |     |  |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |     |  |     |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |     |  |     |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |     |  |     |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |  |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |     |  |     |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |     |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |     |  |     |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |     |  |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |     |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |     |  |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |     |  |  |        +--:(tet:as-number)
        |  |  |     |  |     |  |  |        |  +--rw tet:as-number-hop
        |  |  |     |  |     |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |     |  |     |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |  |     |  |  |        +--:(tet:label)
        |  |  |     |  |     |  |  |        |  +--rw tet:label-hop
        |  |  |     |  |     |  |  |        |     +--rw tet:te-label
        |  |  |     |  |     |  |  |        |        +--rw (tet:technology)?
        |  |  |     |  |     |  |  |        |        |  +--:(tet:generic)
        |  |  |     |  |     |  |  |        |        |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |  |     |  |  |        |        |  +--:(ethtetopo:eth)
        |  |  |     |  |     |  |  |        |        |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |     |  |  |        |        +--rw tet:direction?            te-label-direction
        |  |  |     |  |     |  |  |        +--:(tet:srlg)
        |  |  |     |  |     |  |  |           +--rw tet:srlg
        |  |  |     |  |     |  |  |              +--rw tet:srlg?   uint32
        |  |  |     |  |     |  |  +--rw tet:explicit-route-include-objects
        |  |  |     |  |     |  |     +--rw tet:route-object-include-object* [index]
        |  |  |     |  |     |  |        +--rw tet:index                        uint32
        |  |  |     |  |     |  |        +--rw (tet:type)?
        |  |  |     |  |     |  |           +--:(tet:numbered-node-hop)
        |  |  |     |  |     |  |           |  +--rw tet:numbered-node-hop
        |  |  |     |  |     |  |           |     +--rw tet:node-id     te-node-id
        |  |  |     |  |     |  |           |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |  |     |  |           +--:(tet:numbered-link-hop)
        |  |  |     |  |     |  |           |  +--rw tet:numbered-link-hop
        |  |  |     |  |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |     |  |     |  |           |  +--rw tet:unnumbered-link-hop
        |  |  |     |  |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |  |     |  |           |     +--rw tet:node-id       te-node-id
        |  |  |     |  |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |  |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |     |  |     |  |           +--:(tet:as-number)
        |  |  |     |  |     |  |           |  +--rw tet:as-number-hop
        |  |  |     |  |     |  |           |     +--rw tet:as-number    inet:as-number
        |  |  |     |  |     |  |           |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |  |     |  |           +--:(tet:label)
        |  |  |     |  |     |  |              +--rw tet:label-hop
        |  |  |     |  |     |  |                 +--rw tet:te-label
        |  |  |     |  |     |  |                    +--rw (tet:technology)?
        |  |  |     |  |     |  |                    |  +--:(tet:generic)
        |  |  |     |  |     |  |                    |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |  |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |     |  |     |  |                    |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |     |  |                    +--rw tet:direction?            te-label-direction
        |  |  |     |  |     |  +--rw tet:tiebreakers
        |  |  |     |  |     |     +--rw tet:tiebreaker* [tiebreaker-type]
        |  |  |     |  |     |        +--rw tet:tiebreaker-type    identityref
        |  |  |     |  |     +--:(tet:objective-function) {path-optimization-objective-function}?
        |  |  |     |  |        +--rw tet:objective-function
        |  |  |     |  |           +--rw tet:objective-function-type?   identityref
        |  |  |     |  +--ro tet:path-properties
        |  |  |     |  |  +--ro tet:path-metric* [metric-type]
        |  |  |     |  |  |  +--ro tet:metric-type           identityref
        |  |  |     |  |  |  +--ro tet:accumulative-value?   uint64
        |  |  |     |  |  +--ro tet:path-affinities-values
        |  |  |     |  |  |  +--ro tet:path-affinities-value* [usage]
        |  |  |     |  |  |     +--ro tet:usage    identityref
        |  |  |     |  |  |     +--ro tet:value?   admin-groups
        |  |  |     |  |  +--ro tet:path-affinity-names
        |  |  |     |  |  |  +--ro tet:path-affinity-name* [usage]
        |  |  |     |  |  |     +--ro tet:usage            identityref
        |  |  |     |  |  |     +--ro tet:affinity-name* [name]
        |  |  |     |  |  |        +--ro tet:name    string
        |  |  |     |  |  +--ro tet:path-srlgs-lists
        |  |  |     |  |  |  +--ro tet:path-srlgs-list* [usage]
        |  |  |     |  |  |     +--ro tet:usage     identityref
        |  |  |     |  |  |     +--ro tet:values*   srlg
        |  |  |     |  |  +--ro tet:path-srlgs-names
        |  |  |     |  |  |  +--ro tet:path-srlgs-name* [usage]
        |  |  |     |  |  |     +--ro tet:usage    identityref
        |  |  |     |  |  |     +--ro tet:names*   string
        |  |  |     |  |  +--ro tet:path-route-objects
        |  |  |     |  |     +--ro tet:path-route-object* [index]
        |  |  |     |  |        +--ro tet:index                        uint32
        |  |  |     |  |        +--ro (tet:type)?
        |  |  |     |  |           +--:(tet:numbered-node-hop)
        |  |  |     |  |           |  +--ro tet:numbered-node-hop
        |  |  |     |  |           |     +--ro tet:node-id     te-node-id
        |  |  |     |  |           |     +--ro tet:hop-type?   te-hop-type
        |  |  |     |  |           +--:(tet:numbered-link-hop)
        |  |  |     |  |           |  +--ro tet:numbered-link-hop
        |  |  |     |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |     |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |     |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |     |  |           |  +--ro tet:unnumbered-link-hop
        |  |  |     |  |           |     +--ro tet:link-tp-id    te-tp-id
        |  |  |     |  |           |     +--ro tet:node-id       te-node-id
        |  |  |     |  |           |     +--ro tet:hop-type?     te-hop-type
        |  |  |     |  |           |     +--ro tet:direction?    te-link-direction
        |  |  |     |  |           +--:(tet:as-number)
        |  |  |     |  |           |  +--ro tet:as-number-hop
        |  |  |     |  |           |     +--ro tet:as-number    inet:as-number
        |  |  |     |  |           |     +--ro tet:hop-type?    te-hop-type
        |  |  |     |  |           +--:(tet:label)
        |  |  |     |  |              +--ro tet:label-hop
        |  |  |     |  |                 +--ro tet:te-label
        |  |  |     |  |                    +--ro (tet:technology)?
        |  |  |     |  |                    |  +--:(tet:generic)
        |  |  |     |  |                    |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |     |  |                    |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |  |                    +--ro tet:direction?            te-label-direction
        |  |  |     |  +--rw tet:local-link-connectivity* [link-tp-ref]
        |  |  |     |     +--rw tet:link-tp-ref           -> ../../../../../nt:termination-point/tp-id
        |  |  |     |     +--rw tet:label-restrictions
        |  |  |     |     |  +--rw tet:label-restriction* [index]
        |  |  |     |     |     +--rw tet:restriction?      enumeration
        |  |  |     |     |     +--rw tet:index             uint32
        |  |  |     |     |     +--rw tet:label-start
        |  |  |     |     |     |  +--rw tet:te-label
        |  |  |     |     |     |     +--rw (tet:technology)?
        |  |  |     |     |     |     |  +--:(tet:generic)
        |  |  |     |     |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |     |     |     |  +--:(ethtetopo:eth)
        |  |  |     |     |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |     |     |     +--rw tet:direction?            te-label-direction
        |  |  |     |     |     +--rw tet:label-end
        |  |  |     |     |     |  +--rw tet:te-label
        |  |  |     |     |     |     +--rw (tet:technology)?
        |  |  |     |     |     |     |  +--:(tet:generic)
        |  |  |     |     |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |     |     |     |  +--:(ethtetopo:eth)
        |  |  |     |     |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |     |     |     +--rw tet:direction?            te-label-direction
        |  |  |     |     |     +--rw tet:label-step
        |  |  |     |     |     |  +--rw (tet:technology)?
        |  |  |     |     |     |     +--:(tet:generic)
        |  |  |     |     |     |     |  +--rw tet:generic?          int32
        |  |  |     |     |     |     +--:(ethtetopo:eth)
        |  |  |     |     |     |        +--rw ethtetopo:eth-step?   uint16
        |  |  |     |     |     +--rw tet:range-bitmap?     yang:hex-string
        |  |  |     |     |     +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |     |     |     +--rw ethtetopo:priority?   uint8
        |  |  |     |     +--rw tet:is-allowed?           boolean
        |  |  |     |     +--rw tet:underlay {te-topology-hierarchy}?
        |  |  |     |     |  +--rw tet:enabled?                     boolean
        |  |  |     |     |  +--rw tet:primary-path
        |  |  |     |     |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |     |     |  |  +--rw tet:path-element* [path-element-id]
        |  |  |     |     |  |     +--rw tet:path-element-id              uint32
        |  |  |     |     |  |     +--rw (tet:type)?
        |  |  |     |     |  |        +--:(tet:numbered-node-hop)
        |  |  |     |     |  |        |  +--rw tet:numbered-node-hop
        |  |  |     |     |  |        |     +--rw tet:node-id     te-node-id
        |  |  |     |     |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |     |  |        +--:(tet:numbered-link-hop)
        |  |  |     |     |  |        |  +--rw tet:numbered-link-hop
        |  |  |     |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |  |        +--:(tet:unnumbered-link-hop)
        |  |  |     |     |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |     |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |  |        |     +--rw tet:node-id       te-node-id
        |  |  |     |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |  |        +--:(tet:as-number)
        |  |  |     |     |  |        |  +--rw tet:as-number-hop
        |  |  |     |     |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |     |     |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |     |  |        +--:(tet:label)
        |  |  |     |     |  |           +--rw tet:label-hop
        |  |  |     |     |  |              +--rw tet:te-label
        |  |  |     |     |  |                 +--rw (tet:technology)?
        |  |  |     |     |  |                 |  +--:(tet:generic)
        |  |  |     |     |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |     |  |                 |  +--:(ethtetopo:eth)
        |  |  |     |     |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |     |  |                 +--rw tet:direction?            te-label-direction
        |  |  |     |     |  +--rw tet:backup-path* [index]
        |  |  |     |     |  |  +--rw tet:index           uint32
        |  |  |     |     |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |     |     |  |  +--rw tet:path-element* [path-element-id]
        |  |  |     |     |  |     +--rw tet:path-element-id              uint32
        |  |  |     |     |  |     +--rw (tet:type)?
        |  |  |     |     |  |        +--:(tet:numbered-node-hop)
        |  |  |     |     |  |        |  +--rw tet:numbered-node-hop
        |  |  |     |     |  |        |     +--rw tet:node-id     te-node-id
        |  |  |     |     |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |     |  |        +--:(tet:numbered-link-hop)
        |  |  |     |     |  |        |  +--rw tet:numbered-link-hop
        |  |  |     |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |  |        +--:(tet:unnumbered-link-hop)
        |  |  |     |     |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |     |     |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |  |        |     +--rw tet:node-id       te-node-id
        |  |  |     |     |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |  |        +--:(tet:as-number)
        |  |  |     |     |  |        |  +--rw tet:as-number-hop
        |  |  |     |     |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |     |     |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |     |  |        +--:(tet:label)
        |  |  |     |     |  |           +--rw tet:label-hop
        |  |  |     |     |  |              +--rw tet:te-label
        |  |  |     |     |  |                 +--rw (tet:technology)?
        |  |  |     |     |  |                 |  +--:(tet:generic)
        |  |  |     |     |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |     |  |                 |  +--:(ethtetopo:eth)
        |  |  |     |     |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |     |  |                 +--rw tet:direction?            te-label-direction
        |  |  |     |     |  +--rw tet:protection-type?             identityref
        |  |  |     |     |  +--rw tet:tunnel-termination-points
        |  |  |     |     |  |  +--rw tet:source?        binary
        |  |  |     |     |  |  +--rw tet:destination?   binary
        |  |  |     |     |  +--rw tet:tunnels
        |  |  |     |     |     +--rw tet:sharing?   boolean
        |  |  |     |     |     +--rw tet:tunnel* [tunnel-name]
        |  |  |     |     |        +--rw tet:tunnel-name    string
        |  |  |     |     |        +--rw tet:sharing?       boolean
        |  |  |     |     +--rw tet:path-constraints
        |  |  |     |     |  +--rw tet:te-bandwidth
        |  |  |     |     |  |  +--rw (tet:technology)?
        |  |  |     |     |  |     +--:(tet:generic)
        |  |  |     |     |  |     |  +--rw tet:generic?               te-bandwidth
        |  |  |     |     |  |     +--:(ethtetopo:eth)
        |  |  |     |     |  |        +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |     |     |  +--rw tet:link-protection?          identityref
        |  |  |     |     |  +--rw tet:setup-priority?           uint8
        |  |  |     |     |  +--rw tet:hold-priority?            uint8
        |  |  |     |     |  +--rw tet:signaling-type?           identityref
        |  |  |     |     |  +--rw tet:path-metric-bounds
        |  |  |     |     |  |  +--rw tet:path-metric-bound* [metric-type]
        |  |  |     |     |  |     +--rw tet:metric-type    identityref
        |  |  |     |     |  |     +--rw tet:upper-bound?   uint64
        |  |  |     |     |  +--rw tet:path-affinities-values
        |  |  |     |     |  |  +--rw tet:path-affinities-value* [usage]
        |  |  |     |     |  |     +--rw tet:usage    identityref
        |  |  |     |     |  |     +--rw tet:value?   admin-groups
        |  |  |     |     |  +--rw tet:path-affinity-names
        |  |  |     |     |  |  +--rw tet:path-affinity-name* [usage]
        |  |  |     |     |  |     +--rw tet:usage            identityref
        |  |  |     |     |  |     +--rw tet:affinity-name* [name]
        |  |  |     |     |  |        +--rw tet:name    string
        |  |  |     |     |  +--rw tet:path-srlgs-lists
        |  |  |     |     |  |  +--rw tet:path-srlgs-list* [usage]
        |  |  |     |     |  |     +--rw tet:usage     identityref
        |  |  |     |     |  |     +--rw tet:values*   srlg
        |  |  |     |     |  +--rw tet:path-srlgs-names
        |  |  |     |     |  |  +--rw tet:path-srlgs-name* [usage]
        |  |  |     |     |  |     +--rw tet:usage    identityref
        |  |  |     |     |  |     +--rw tet:names*   string
        |  |  |     |     |  +--rw tet:disjointness?             te-path-disjointness
        |  |  |     |     +--rw tet:optimizations
        |  |  |     |     |  +--rw (tet:algorithm)?
        |  |  |     |     |     +--:(tet:metric) {path-optimization-metric}?
        |  |  |     |     |     |  +--rw tet:optimization-metric* [metric-type]
        |  |  |     |     |     |  |  +--rw tet:metric-type                       identityref
        |  |  |     |     |     |  |  +--rw tet:weight?                           uint8
        |  |  |     |     |     |  |  +--rw tet:explicit-route-exclude-objects
        |  |  |     |     |     |  |  |  +--rw tet:route-object-exclude-object* [index]
        |  |  |     |     |     |  |  |     +--rw tet:index                        uint32
        |  |  |     |     |     |  |  |     +--rw (tet:type)?
        |  |  |     |     |     |  |  |        +--:(tet:numbered-node-hop)
        |  |  |     |     |     |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |     |     |     |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |     |     |     |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |     |     |  |  |        +--:(tet:numbered-link-hop)
        |  |  |     |     |     |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |     |     |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |     |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |     |     |     |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |     |     |     |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |     |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |     |     |     |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |     |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |     |  |  |        +--:(tet:as-number)
        |  |  |     |     |     |  |  |        |  +--rw tet:as-number-hop
        |  |  |     |     |     |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |     |     |     |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |     |     |  |  |        +--:(tet:label)
        |  |  |     |     |     |  |  |        |  +--rw tet:label-hop
        |  |  |     |     |     |  |  |        |     +--rw tet:te-label
        |  |  |     |     |     |  |  |        |        +--rw (tet:technology)?
        |  |  |     |     |     |  |  |        |        |  +--:(tet:generic)
        |  |  |     |     |     |  |  |        |        |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |     |     |  |  |        |        |  +--:(ethtetopo:eth)
        |  |  |     |     |     |  |  |        |        |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |     |     |  |  |        |        +--rw tet:direction?            te-label-direction
        |  |  |     |     |     |  |  |        +--:(tet:srlg)
        |  |  |     |     |     |  |  |           +--rw tet:srlg
        |  |  |     |     |     |  |  |              +--rw tet:srlg?   uint32
        |  |  |     |     |     |  |  +--rw tet:explicit-route-include-objects
        |  |  |     |     |     |  |     +--rw tet:route-object-include-object* [index]
        |  |  |     |     |     |  |        +--rw tet:index                        uint32
        |  |  |     |     |     |  |        +--rw (tet:type)?
        |  |  |     |     |     |  |           +--:(tet:numbered-node-hop)
        |  |  |     |     |     |  |           |  +--rw tet:numbered-node-hop
        |  |  |     |     |     |  |           |     +--rw tet:node-id     te-node-id
        |  |  |     |     |     |  |           |     +--rw tet:hop-type?   te-hop-type
        |  |  |     |     |     |  |           +--:(tet:numbered-link-hop)
        |  |  |     |     |     |  |           |  +--rw tet:numbered-link-hop
        |  |  |     |     |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |     |  |           +--:(tet:unnumbered-link-hop)
        |  |  |     |     |     |  |           |  +--rw tet:unnumbered-link-hop
        |  |  |     |     |     |  |           |     +--rw tet:link-tp-id    te-tp-id
        |  |  |     |     |     |  |           |     +--rw tet:node-id       te-node-id
        |  |  |     |     |     |  |           |     +--rw tet:hop-type?     te-hop-type
        |  |  |     |     |     |  |           |     +--rw tet:direction?    te-link-direction
        |  |  |     |     |     |  |           +--:(tet:as-number)
        |  |  |     |     |     |  |           |  +--rw tet:as-number-hop
        |  |  |     |     |     |  |           |     +--rw tet:as-number    inet:as-number
        |  |  |     |     |     |  |           |     +--rw tet:hop-type?    te-hop-type
        |  |  |     |     |     |  |           +--:(tet:label)
        |  |  |     |     |     |  |              +--rw tet:label-hop
        |  |  |     |     |     |  |                 +--rw tet:te-label
        |  |  |     |     |     |  |                    +--rw (tet:technology)?
        |  |  |     |     |     |  |                    |  +--:(tet:generic)
        |  |  |     |     |     |  |                    |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |     |     |     |  |                    |  +--:(ethtetopo:eth)
        |  |  |     |     |     |  |                    |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |     |     |  |                    +--rw tet:direction?            te-label-direction
        |  |  |     |     |     |  +--rw tet:tiebreakers
        |  |  |     |     |     |     +--rw tet:tiebreaker* [tiebreaker-type]
        |  |  |     |     |     |        +--rw tet:tiebreaker-type    identityref
        |  |  |     |     |     +--:(tet:objective-function) {path-optimization-objective-function}?
        |  |  |     |     |        +--rw tet:objective-function
        |  |  |     |     |           +--rw tet:objective-function-type?   identityref
        |  |  |     |     +--ro tet:path-properties
        |  |  |     |        +--ro tet:path-metric* [metric-type]
        |  |  |     |        |  +--ro tet:metric-type           identityref
        |  |  |     |        |  +--ro tet:accumulative-value?   uint64
        |  |  |     |        +--ro tet:path-affinities-values
        |  |  |     |        |  +--ro tet:path-affinities-value* [usage]
        |  |  |     |        |     +--ro tet:usage    identityref
        |  |  |     |        |     +--ro tet:value?   admin-groups
        |  |  |     |        +--ro tet:path-affinity-names
        |  |  |     |        |  +--ro tet:path-affinity-name* [usage]
        |  |  |     |        |     +--ro tet:usage            identityref
        |  |  |     |        |     +--ro tet:affinity-name* [name]
        |  |  |     |        |        +--ro tet:name    string
        |  |  |     |        +--ro tet:path-srlgs-lists
        |  |  |     |        |  +--ro tet:path-srlgs-list* [usage]
        |  |  |     |        |     +--ro tet:usage     identityref
        |  |  |     |        |     +--ro tet:values*   srlg
        |  |  |     |        +--ro tet:path-srlgs-names
        |  |  |     |        |  +--ro tet:path-srlgs-name* [usage]
        |  |  |     |        |     +--ro tet:usage    identityref
        |  |  |     |        |     +--ro tet:names*   string
        |  |  |     |        +--ro tet:path-route-objects
        |  |  |     |           +--ro tet:path-route-object* [index]
        |  |  |     |              +--ro tet:index                        uint32
        |  |  |     |              +--ro (tet:type)?
        |  |  |     |                 +--:(tet:numbered-node-hop)
        |  |  |     |                 |  +--ro tet:numbered-node-hop
        |  |  |     |                 |     +--ro tet:node-id     te-node-id
        |  |  |     |                 |     +--ro tet:hop-type?   te-hop-type
        |  |  |     |                 +--:(tet:numbered-link-hop)
        |  |  |     |                 |  +--ro tet:numbered-link-hop
        |  |  |     |                 |     +--ro tet:link-tp-id    te-tp-id
        |  |  |     |                 |     +--ro tet:hop-type?     te-hop-type
        |  |  |     |                 |     +--ro tet:direction?    te-link-direction
        |  |  |     |                 +--:(tet:unnumbered-link-hop)
        |  |  |     |                 |  +--ro tet:unnumbered-link-hop
        |  |  |     |                 |     +--ro tet:link-tp-id    te-tp-id
        |  |  |     |                 |     +--ro tet:node-id       te-node-id
        |  |  |     |                 |     +--ro tet:hop-type?     te-hop-type
        |  |  |     |                 |     +--ro tet:direction?    te-link-direction
        |  |  |     |                 +--:(tet:as-number)
        |  |  |     |                 |  +--ro tet:as-number-hop
        |  |  |     |                 |     +--ro tet:as-number    inet:as-number
        |  |  |     |                 |     +--ro tet:hop-type?    te-hop-type
        |  |  |     |                 +--:(tet:label)
        |  |  |     |                    +--ro tet:label-hop
        |  |  |     |                       +--ro tet:te-label
        |  |  |     |                          +--ro (tet:technology)?
        |  |  |     |                          |  +--:(tet:generic)
        |  |  |     |                          |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |     |                          |  +--:(ethtetopo:eth)
        |  |  |     |                          |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |     |                          +--ro tet:direction?            te-label-direction
        |  |  |     +--ro tet:oper-status?                           te-types:te-oper-status
        |  |  |     +--ro tet:geolocation
        |  |  |     |  +--ro tet:altitude?    int64
        |  |  |     |  +--ro tet:latitude?    geographic-coordinate-degree
        |  |  |     |  +--ro tet:longitude?   geographic-coordinate-degree
        |  |  |     +--ro tet:statistics
        |  |  |     |  +--ro tet:discontinuity-time?         yang:date-and-time
        |  |  |     |  +--ro tet:tunnel-termination-point
        |  |  |     |  |  +--ro tet:disables?             yang:counter32
        |  |  |     |  |  +--ro tet:enables?              yang:counter32
        |  |  |     |  |  +--ro tet:maintenance-clears?   yang:counter32
        |  |  |     |  |  +--ro tet:maintenance-sets?     yang:counter32
        |  |  |     |  |  +--ro tet:modifies?             yang:counter32
        |  |  |     |  |  +--ro tet:downs?                yang:counter32
        |  |  |     |  |  +--ro tet:ups?                  yang:counter32
        |  |  |     |  |  +--ro tet:in-service-clears?    yang:counter32
        |  |  |     |  |  +--ro tet:in-service-sets?      yang:counter32
        |  |  |     |  +--ro tet:local-link-connectivity
        |  |  |     |     +--ro tet:creates?    yang:counter32
        |  |  |     |     +--ro tet:deletes?    yang:counter32
        |  |  |     |     +--ro tet:disables?   yang:counter32
        |  |  |     |     +--ro tet:enables?    yang:counter32
        |  |  |     |     +--ro tet:modifies?   yang:counter32
        |  |  |     +--rw tet:supporting-tunnel-termination-point* [node-ref tunnel-tp-ref]
        |  |  |        +--rw tet:node-ref         inet:uri
        |  |  |        +--rw tet:tunnel-tp-ref    binary
        |  |  +--rw l2t:l2-node-attributes
        |  |     +--rw l2t:name?                 string
        |  |     +--rw l2t:flags*                node-flag-type
        |  |     +--rw l2t:bridge-id*            string
        |  |     +--rw l2t:management-address*   inet:ip-address
        |  |     +--rw l2t:management-mac?       yang:mac-address
        |  |     +--rw l2t:management-vlan?      string
        |  +--rw nt:link* [link-id]
        |  |  +--rw nt:link-id                link-id
        |  |  +--rw nt:source
        |  |  |  +--rw nt:source-node?   -> ../../../nw:node/node-id
        |  |  |  +--rw nt:source-tp?     -> ../../../nw:node[nw:node-id=current()/../source-node]/termination-point/tp-id
        |  |  +--rw nt:destination
        |  |  |  +--rw nt:dest-node?   -> ../../../nw:node/node-id
        |  |  |  +--rw nt:dest-tp?     -> ../../../nw:node[nw:node-id=current()/../dest-node]/termination-point/tp-id
        |  |  +--rw nt:supporting-link* [network-ref link-ref]
        |  |  |  +--rw nt:network-ref    -> ../../../nw:supporting-network/network-ref
        |  |  |  +--rw nt:link-ref       -> /nw:networks/network[nw:network-id=current()/../network-ref]/link/link-id
        |  |  +--rw tet:te!
        |  |  |  +--rw (tet:bundle-stack-level)?
        |  |  |  |  +--:(tet:bundle)
        |  |  |  |  |  +--rw tet:bundled-links
        |  |  |  |  |     +--rw tet:bundled-link* [sequence]
        |  |  |  |  |        +--rw tet:sequence      uint32
        |  |  |  |  |        +--rw tet:src-tp-ref?   -> ../../../../../nw:node[nw:node-id = current()/../../../../nt:source/source-node]/termination-point/tp-id
        |  |  |  |  |        +--rw tet:des-tp-ref?   -> ../../../../../nw:node[nw:node-id = current()/../../../../nt:destination/dest-node]/termination-point/tp-id
        |  |  |  |  +--:(tet:component)
        |  |  |  |     +--rw tet:component-links
        |  |  |  |        +--rw tet:component-link* [sequence]
        |  |  |  |           +--rw tet:sequence             uint32
        |  |  |  |           +--rw tet:src-interface-ref?   string
        |  |  |  |           +--rw tet:des-interface-ref?   string
        |  |  |  +--rw tet:te-link-template*              -> ../../../../te/templates/link-template/name {template}?
        |  |  |  +--rw tet:te-link-attributes
        |  |  |  |  +--rw tet:access-type?                      te-types:te-link-access-type
        |  |  |  |  +--rw tet:external-domain
        |  |  |  |  |  +--rw tet:network-ref?            -> /nw:networks/network/network-id
        |  |  |  |  |  +--rw tet:remote-te-node-id?      te-types:te-node-id
        |  |  |  |  |  +--rw tet:remote-te-link-tp-id?   te-types:te-tp-id
        |  |  |  |  +--rw tet:is-abstract?                      empty
        |  |  |  |  +--rw tet:name?                             string
        |  |  |  |  +--rw tet:underlay {te-topology-hierarchy}?
        |  |  |  |  |  +--rw tet:enabled?                     boolean
        |  |  |  |  |  +--rw tet:primary-path
        |  |  |  |  |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |  |  +--rw tet:path-element* [path-element-id]
        |  |  |  |  |  |     +--rw tet:path-element-id              uint32
        |  |  |  |  |  |     +--rw (tet:type)?
        |  |  |  |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |  |        +--:(tet:label)
        |  |  |  |  |  |           +--rw tet:label-hop
        |  |  |  |  |  |              +--rw tet:te-label
        |  |  |  |  |  |                 +--rw (tet:technology)?
        |  |  |  |  |  |                 |  +--:(tet:generic)
        |  |  |  |  |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |                 +--rw tet:direction?            te-label-direction
        |  |  |  |  |  +--rw tet:backup-path* [index]
        |  |  |  |  |  |  +--rw tet:index           uint32
        |  |  |  |  |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
        |  |  |  |  |  |  +--rw tet:path-element* [path-element-id]
        |  |  |  |  |  |     +--rw tet:path-element-id              uint32
        |  |  |  |  |  |     +--rw (tet:type)?
        |  |  |  |  |  |        +--:(tet:numbered-node-hop)
        |  |  |  |  |  |        |  +--rw tet:numbered-node-hop
        |  |  |  |  |  |        |     +--rw tet:node-id     te-node-id
        |  |  |  |  |  |        |     +--rw tet:hop-type?   te-hop-type
        |  |  |  |  |  |        +--:(tet:numbered-link-hop)
        |  |  |  |  |  |        |  +--rw tet:numbered-link-hop
        |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |        +--:(tet:unnumbered-link-hop)
        |  |  |  |  |  |        |  +--rw tet:unnumbered-link-hop
        |  |  |  |  |  |        |     +--rw tet:link-tp-id    te-tp-id
        |  |  |  |  |  |        |     +--rw tet:node-id       te-node-id
        |  |  |  |  |  |        |     +--rw tet:hop-type?     te-hop-type
        |  |  |  |  |  |        |     +--rw tet:direction?    te-link-direction
        |  |  |  |  |  |        +--:(tet:as-number)
        |  |  |  |  |  |        |  +--rw tet:as-number-hop
        |  |  |  |  |  |        |     +--rw tet:as-number    inet:as-number
        |  |  |  |  |  |        |     +--rw tet:hop-type?    te-hop-type
        |  |  |  |  |  |        +--:(tet:label)
        |  |  |  |  |  |           +--rw tet:label-hop
        |  |  |  |  |  |              +--rw tet:te-label
        |  |  |  |  |  |                 +--rw (tet:technology)?
        |  |  |  |  |  |                 |  +--:(tet:generic)
        |  |  |  |  |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |  |                 |  +--:(ethtetopo:eth)
        |  |  |  |  |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |  |                 +--rw tet:direction?            te-label-direction
        |  |  |  |  |  +--rw tet:protection-type?             identityref
        |  |  |  |  |  +--rw tet:tunnel-termination-points
        |  |  |  |  |  |  +--rw tet:source?        binary
        |  |  |  |  |  |  +--rw tet:destination?   binary
        |  |  |  |  |  +--rw tet:tunnels
        |  |  |  |  |     +--rw tet:sharing?   boolean
        |  |  |  |  |     +--rw tet:tunnel* [tunnel-name]
        |  |  |  |  |        +--rw tet:tunnel-name    string
        |  |  |  |  |        +--rw tet:sharing?       boolean
        |  |  |  |  +--rw tet:admin-status?                     te-types:te-admin-status
        |  |  |  |  +--rw tet:link-index?                       uint64
        |  |  |  |  +--rw tet:administrative-group?             te-types:admin-groups
        |  |  |  |  +--rw tet:interface-switching-capability* [switching-capability encoding]
        |  |  |  |  |  +--rw tet:switching-capability    identityref
        |  |  |  |  |  +--rw tet:encoding                identityref
        |  |  |  |  |  +--rw tet:max-lsp-bandwidth* [priority]
        |  |  |  |  |     +--rw tet:priority        uint8
        |  |  |  |  |     +--rw tet:te-bandwidth
        |  |  |  |  |        +--rw (tet:technology)?
        |  |  |  |  |           +--:(tet:generic)
        |  |  |  |  |           |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |           +--:(ethtetopo:eth)
        |  |  |  |  |              +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--rw tet:label-restrictions
        |  |  |  |  |  +--rw tet:label-restriction* [index]
        |  |  |  |  |     +--rw tet:restriction?      enumeration
        |  |  |  |  |     +--rw tet:index             uint32
        |  |  |  |  |     +--rw tet:label-start
        |  |  |  |  |     |  +--rw tet:te-label
        |  |  |  |  |     |     +--rw (tet:technology)?
        |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |     +--rw tet:label-end
        |  |  |  |  |     |  +--rw tet:te-label
        |  |  |  |  |     |     +--rw (tet:technology)?
        |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     +--rw tet:direction?            te-label-direction
        |  |  |  |  |     +--rw tet:label-step
        |  |  |  |  |     |  +--rw (tet:technology)?
        |  |  |  |  |     |     +--:(tet:generic)
        |  |  |  |  |     |     |  +--rw tet:generic?          int32
        |  |  |  |  |     |     +--:(ethtetopo:eth)
        |  |  |  |  |     |        +--rw ethtetopo:eth-step?   uint16
        |  |  |  |  |     +--rw tet:range-bitmap?     yang:hex-string
        |  |  |  |  |     +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |     +--rw ethtetopo:priority?   uint8
        |  |  |  |  +--rw tet:link-protection-type?             identityref
        |  |  |  |  +--rw tet:max-link-bandwidth
        |  |  |  |  |  +--rw tet:te-bandwidth
        |  |  |  |  |     +--rw (tet:technology)?
        |  |  |  |  |        +--:(tet:generic)
        |  |  |  |  |        |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |        +--:(ethtetopo:eth)
        |  |  |  |  |        |  +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  |        +--:(mwtopo:microwave)
        |  |  |  |  |           +--ro mwtopo:mw-bandwidth?       uint64
        |  |  |  |  +--rw tet:max-resv-link-bandwidth
        |  |  |  |  |  +--rw tet:te-bandwidth
        |  |  |  |  |     +--rw (tet:technology)?
        |  |  |  |  |        +--:(tet:generic)
        |  |  |  |  |        |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |        +--:(ethtetopo:eth)
        |  |  |  |  |           +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--rw tet:unreserved-bandwidth* [priority]
        |  |  |  |  |  +--rw tet:priority        uint8
        |  |  |  |  |  +--rw tet:te-bandwidth
        |  |  |  |  |     +--rw (tet:technology)?
        |  |  |  |  |        +--:(tet:generic)
        |  |  |  |  |        |  +--rw tet:generic?               te-bandwidth
        |  |  |  |  |        +--:(ethtetopo:eth)
        |  |  |  |  |           +--rw ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--rw tet:te-default-metric?                uint32
        |  |  |  |  +--rw tet:te-delay-metric?                  uint32
        |  |  |  |  +--rw tet:te-igp-metric?                    uint32
        |  |  |  |  +--rw tet:te-srlgs
        |  |  |  |  |  +--rw tet:value*   te-types:srlg
        |  |  |  |  +--rw tet:te-nsrlgs {nsrlg}?
        |  |  |  |  |  +--rw tet:id*   uint32
        |  |  |  |  +--rw bwatopo:link-availability* [availability]
        |  |  |  |  |  +--rw bwatopo:availability      decimal64
        |  |  |  |  |  +--rw bwatopo:link-bandwidth?   uint64
        |  |  |  |  +--ro bwatopo:actual-bandwidth?             yang:gauge64
        |  |  |  |  +--rw mwtopo:mw-link-choice
        |  |  |  |     +--rw (mwtopo:mw-link-option)?
        |  |  |  |        +--:(mwtopo:microwave-radio-link)
        |  |  |  |        |  +--rw mwtopo:microwave-radio-link!
        |  |  |  |        |     +--rw mwtopo:rlt-mode
        |  |  |  |        |        +--rw mwtopo:num-bonded-carriers        uint32
        |  |  |  |        |        +--rw mwtopo:num-protecting-carriers    uint32
        |  |  |  |        +--:(mwtopo:microwave-carrier)
        |  |  |  |           +--rw mwtopo:microwave-carrier!
        |  |  |  |              +--rw mwtopo:tx-frequency?               uint32
        |  |  |  |              +--rw mwtopo:rx-frequency?               uint32
        |  |  |  |              +--rw mwtopo:channel-separation?         uint32
        |  |  |  |              +--ro mwtopo:actual-tx-cm?               identityref
        |  |  |  |              +--ro mwtopo:actual-snir?                decimal64
        |  |  |  |              +--ro mwtopo:actual-transmitted-level?   power
        |  |  |  +--ro tet:oper-status?                   te-types:te-oper-status
        |  |  |  +--ro tet:is-transitional?               empty
        |  |  |  +--ro tet:information-source?            te-info-source
        |  |  |  +--ro tet:information-source-instance?   string
        |  |  |  +--ro tet:information-source-state
        |  |  |  |  +--ro tet:credibility-preference?    uint16
        |  |  |  |  +--ro tet:logical-network-element?   string
        |  |  |  |  +--ro tet:network-instance?          string
        |  |  |  |  +--ro tet:topology
        |  |  |  |     +--ro tet:link-ref?      -> /nw:networks/network[nw:network-id=current()/../network-ref]/nt:link/link-id
        |  |  |  |     +--ro tet:network-ref?   -> /nw:networks/network/network-id
        |  |  |  +--ro tet:information-source-entry* [information-source information-source-instance]
        |  |  |  |  +--ro tet:information-source                te-info-source
        |  |  |  |  +--ro tet:information-source-instance       string
        |  |  |  |  +--ro tet:information-source-state
        |  |  |  |  |  +--ro tet:credibility-preference?    uint16
        |  |  |  |  |  +--ro tet:logical-network-element?   string
        |  |  |  |  |  +--ro tet:network-instance?          string
        |  |  |  |  |  +--ro tet:topology
        |  |  |  |  |     +--ro tet:link-ref?      -> /nw:networks/network[nw:network-id=current()/../network-ref]/nt:link/link-id
        |  |  |  |  |     +--ro tet:network-ref?   -> /nw:networks/network/network-id
        |  |  |  |  +--ro tet:link-index?                       uint64
        |  |  |  |  +--ro tet:administrative-group?             te-types:admin-groups
        |  |  |  |  +--ro tet:interface-switching-capability* [switching-capability encoding]
        |  |  |  |  |  +--ro tet:switching-capability    identityref
        |  |  |  |  |  +--ro tet:encoding                identityref
        |  |  |  |  |  +--ro tet:max-lsp-bandwidth* [priority]
        |  |  |  |  |     +--ro tet:priority        uint8
        |  |  |  |  |     +--ro tet:te-bandwidth
        |  |  |  |  |        +--ro (tet:technology)?
        |  |  |  |  |           +--:(tet:generic)
        |  |  |  |  |           |  +--ro tet:generic?               te-bandwidth
        |  |  |  |  |           +--:(ethtetopo:eth)
        |  |  |  |  |              +--ro ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--ro tet:label-restrictions
        |  |  |  |  |  +--ro tet:label-restriction* [index]
        |  |  |  |  |     +--ro tet:restriction?      enumeration
        |  |  |  |  |     +--ro tet:index             uint32
        |  |  |  |  |     +--ro tet:label-start
        |  |  |  |  |     |  +--ro tet:te-label
        |  |  |  |  |     |     +--ro (tet:technology)?
        |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |     |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |     +--ro tet:label-end
        |  |  |  |  |     |  +--ro tet:te-label
        |  |  |  |  |     |     +--ro (tet:technology)?
        |  |  |  |  |     |     |  +--:(tet:generic)
        |  |  |  |  |     |     |  |  +--ro tet:generic?        rt-types:generalized-label
        |  |  |  |  |     |     |  +--:(ethtetopo:eth)
        |  |  |  |  |     |     |     +--ro ethtetopo:vlanid?   etht-types:vlanid
        |  |  |  |  |     |     +--ro tet:direction?            te-label-direction
        |  |  |  |  |     +--ro tet:label-step
        |  |  |  |  |     |  +--ro (tet:technology)?
        |  |  |  |  |     |     +--:(tet:generic)
        |  |  |  |  |     |     |  +--ro tet:generic?          int32
        |  |  |  |  |     |     +--:(ethtetopo:eth)
        |  |  |  |  |     |        +--ro ethtetopo:eth-step?   uint16
        |  |  |  |  |     +--ro tet:range-bitmap?     yang:hex-string
        |  |  |  |  |     +--ro ethtetopo:tag-type?   etht-types:eth-tag-type
        |  |  |  |  |     +--ro ethtetopo:priority?   uint8
        |  |  |  |  +--ro tet:link-protection-type?             identityref
        |  |  |  |  +--ro tet:max-link-bandwidth
        |  |  |  |  |  +--ro tet:te-bandwidth
        |  |  |  |  |     +--ro (tet:technology)?
        |  |  |  |  |        +--:(tet:generic)
        |  |  |  |  |        |  +--ro tet:generic?               te-bandwidth
        |  |  |  |  |        +--:(ethtetopo:eth)
        |  |  |  |  |           +--ro ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--ro tet:max-resv-link-bandwidth
        |  |  |  |  |  +--ro tet:te-bandwidth
        |  |  |  |  |     +--ro (tet:technology)?
        |  |  |  |  |        +--:(tet:generic)
        |  |  |  |  |        |  +--ro tet:generic?               te-bandwidth
        |  |  |  |  |        +--:(ethtetopo:eth)
        |  |  |  |  |           +--ro ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--ro tet:unreserved-bandwidth* [priority]
        |  |  |  |  |  +--ro tet:priority        uint8
        |  |  |  |  |  +--ro tet:te-bandwidth
        |  |  |  |  |     +--ro (tet:technology)?
        |  |  |  |  |        +--:(tet:generic)
        |  |  |  |  |        |  +--ro tet:generic?               te-bandwidth
        |  |  |  |  |        +--:(ethtetopo:eth)
        |  |  |  |  |           +--ro ethtetopo:eth-bandwidth?   uint64
        |  |  |  |  +--ro tet:te-default-metric?                uint32
        |  |  |  |  +--ro tet:te-delay-metric?                  uint32
        |  |  |  |  +--ro tet:te-igp-metric?                    uint32
        |  |  |  |  +--ro tet:te-srlgs
        |  |  |  |  |  +--ro tet:value*   te-types:srlg
        |  |  |  |  +--ro tet:te-nsrlgs {nsrlg}?
        |  |  |  |     +--ro tet:id*   uint32
        |  |  |  +--ro tet:recovery
        |  |  |  |  +--ro tet:restoration-status?   te-types:te-recovery-status
        |  |  |  |  +--ro tet:protection-status?    te-types:te-recovery-status
        |  |  |  +--ro tet:underlay {te-topology-hierarchy}?
        |  |  |  |  +--ro tet:dynamic?     boolean
        |  |  |  |  +--ro tet:committed?   boolean
        |  |  |  +--ro tet:statistics
        |  |  |     +--ro tet:discontinuity-time?                yang:date-and-time
        |  |  |     +--ro tet:disables?                          yang:counter32
        |  |  |     +--ro tet:enables?                           yang:counter32
        |  |  |     +--ro tet:maintenance-clears?                yang:counter32
        |  |  |     +--ro tet:maintenance-sets?                  yang:counter32
        |  |  |     +--ro tet:modifies?                          yang:counter32
        |  |  |     +--ro tet:downs?                             yang:counter32
        |  |  |     +--ro tet:ups?                               yang:counter32
        |  |  |     +--ro tet:fault-clears?                      yang:counter32
        |  |  |     +--ro tet:fault-detects?                     yang:counter32
        |  |  |     +--ro tet:protection-switches?               yang:counter32
        |  |  |     +--ro tet:protection-reverts?                yang:counter32
        |  |  |     +--ro tet:restoration-failures?              yang:counter32
        |  |  |     +--ro tet:restoration-starts?                yang:counter32
        |  |  |     +--ro tet:restoration-successes?             yang:counter32
        |  |  |     +--ro tet:restoration-reversion-failures?    yang:counter32
        |  |  |     +--ro tet:restoration-reversion-starts?      yang:counter32
        |  |  |     +--ro tet:restoration-reversion-successes?   yang:counter32
        |  |  +--rw l2t:l2-link-attributes
        |  |     +--rw l2t:name?        string
        |  |     +--rw l2t:flags*       link-flag-type
        |  |     +--rw l2t:rate?        uint64
        |  |     +--rw l2t:delay?       uint32
        |  |     +--rw l2t:auto-nego?   boolean
        |  |     +--rw l2t:duplex?      duplex-mode
        |  +--rw tet:te-topology-identifier
        |  |  +--rw tet:provider-id?   te-global-id
        |  |  +--rw tet:client-id?     te-global-id
        |  |  +--rw tet:topology-id?   te-topology-id
        |  +--rw tet:te!
        |  |  +--rw tet:name?                     string
        |  |  +--rw tet:preference?               uint8
        |  |  +--rw tet:optimization-criterion?   identityref
        |  |  +--rw tet:nsrlg* [id] {nsrlg}?
        |  |  |  +--rw tet:id              uint32
        |  |  |  +--rw tet:disjointness?   te-types:te-path-disjointness
        |  |  +--ro tet:geolocation
        |  |     +--ro tet:altitude?    int64
        |  |     +--ro tet:latitude?    geographic-coordinate-degree
        |  |     +--ro tet:longitude?   geographic-coordinate-degree
        |  +--rw l2t:l2-topology-attributes
        |     +--rw l2t:name?    string
        |     +--rw l2t:flags*   l2-flag-type
        +--rw tet:te!
           +--rw tet:templates
              +--rw tet:node-template* [name] {template}?
              |  +--rw tet:name                       te-types:te-template-name
              |  +--rw tet:priority?                  uint16
              |  +--rw tet:reference-change-policy?   enumeration
              |  +--rw tet:te-node-attributes
              |     +--rw tet:admin-status?        te-types:te-admin-status
              |     +--rw tet:domain-id?           uint32
              |     +--rw tet:is-abstract?         empty
              |     +--rw tet:name?                string
              |     +--rw tet:signaling-address*   inet:ip-address
              |     +--rw tet:underlay-topology {te-topology-hierarchy}?
              |        +--rw tet:network-ref?   -> /nw:networks/network/network-id
              +--rw tet:link-template* [name] {template}?
                 +--rw tet:name                       te-types:te-template-name
                 +--rw tet:priority?                  uint16
                 +--rw tet:reference-change-policy?   enumeration
                 +--rw tet:te-link-attributes
                    +--rw tet:access-type?                      te-types:te-link-access-type
                    +--rw tet:external-domain
                    |  +--rw tet:network-ref?            -> /nw:networks/network/network-id
                    |  +--rw tet:remote-te-node-id?      te-types:te-node-id
                    |  +--rw tet:remote-te-link-tp-id?   te-types:te-tp-id
                    +--rw tet:is-abstract?                      empty
                    +--rw tet:name?                             string
                    +--rw tet:underlay {te-topology-hierarchy}?
                    |  +--rw tet:enabled?                     boolean
                    |  +--rw tet:primary-path
                    |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
                    |  |  +--rw tet:path-element* [path-element-id]
                    |  |     +--rw tet:path-element-id              uint32
                    |  |     +--rw (tet:type)?
                    |  |        +--:(tet:numbered-node-hop)
                    |  |        |  +--rw tet:numbered-node-hop
                    |  |        |     +--rw tet:node-id     te-node-id
                    |  |        |     +--rw tet:hop-type?   te-hop-type
                    |  |        +--:(tet:numbered-link-hop)
                    |  |        |  +--rw tet:numbered-link-hop
                    |  |        |     +--rw tet:link-tp-id    te-tp-id
                    |  |        |     +--rw tet:hop-type?     te-hop-type
                    |  |        |     +--rw tet:direction?    te-link-direction
                    |  |        +--:(tet:unnumbered-link-hop)
                    |  |        |  +--rw tet:unnumbered-link-hop
                    |  |        |     +--rw tet:link-tp-id    te-tp-id
                    |  |        |     +--rw tet:node-id       te-node-id
                    |  |        |     +--rw tet:hop-type?     te-hop-type
                    |  |        |     +--rw tet:direction?    te-link-direction
                    |  |        +--:(tet:as-number)
                    |  |        |  +--rw tet:as-number-hop
                    |  |        |     +--rw tet:as-number    inet:as-number
                    |  |        |     +--rw tet:hop-type?    te-hop-type
                    |  |        +--:(tet:label)
                    |  |           +--rw tet:label-hop
                    |  |              +--rw tet:te-label
                    |  |                 +--rw (tet:technology)?
                    |  |                 |  +--:(tet:generic)
                    |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
                    |  |                 |  +--:(ethtetopo:eth)
                    |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
                    |  |                 +--rw tet:direction?            te-label-direction
                    |  +--rw tet:backup-path* [index]
                    |  |  +--rw tet:index           uint32
                    |  |  +--rw tet:network-ref?    -> /nw:networks/network/network-id
                    |  |  +--rw tet:path-element* [path-element-id]
                    |  |     +--rw tet:path-element-id              uint32
                    |  |     +--rw (tet:type)?
                    |  |        +--:(tet:numbered-node-hop)
                    |  |        |  +--rw tet:numbered-node-hop
                    |  |        |     +--rw tet:node-id     te-node-id
                    |  |        |     +--rw tet:hop-type?   te-hop-type
                    |  |        +--:(tet:numbered-link-hop)
                    |  |        |  +--rw tet:numbered-link-hop
                    |  |        |     +--rw tet:link-tp-id    te-tp-id
                    |  |        |     +--rw tet:hop-type?     te-hop-type
                    |  |        |     +--rw tet:direction?    te-link-direction
                    |  |        +--:(tet:unnumbered-link-hop)
                    |  |        |  +--rw tet:unnumbered-link-hop
                    |  |        |     +--rw tet:link-tp-id    te-tp-id
                    |  |        |     +--rw tet:node-id       te-node-id
                    |  |        |     +--rw tet:hop-type?     te-hop-type
                    |  |        |     +--rw tet:direction?    te-link-direction
                    |  |        +--:(tet:as-number)
                    |  |        |  +--rw tet:as-number-hop
                    |  |        |     +--rw tet:as-number    inet:as-number
                    |  |        |     +--rw tet:hop-type?    te-hop-type
                    |  |        +--:(tet:label)
                    |  |           +--rw tet:label-hop
                    |  |              +--rw tet:te-label
                    |  |                 +--rw (tet:technology)?
                    |  |                 |  +--:(tet:generic)
                    |  |                 |  |  +--rw tet:generic?        rt-types:generalized-label
                    |  |                 |  +--:(ethtetopo:eth)
                    |  |                 |     +--rw ethtetopo:vlanid?   etht-types:vlanid
                    |  |                 +--rw tet:direction?            te-label-direction
                    |  +--rw tet:protection-type?             identityref
                    |  +--rw tet:tunnel-termination-points
                    |  |  +--rw tet:source?        binary
                    |  |  +--rw tet:destination?   binary
                    |  +--rw tet:tunnels
                    |     +--rw tet:sharing?   boolean
                    |     +--rw tet:tunnel* [tunnel-name]
                    |        +--rw tet:tunnel-name    string
                    |        +--rw tet:sharing?       boolean
                    +--rw tet:admin-status?                     te-types:te-admin-status
                    +--rw tet:link-index?                       uint64
                    +--rw tet:administrative-group?             te-types:admin-groups
                    +--rw tet:interface-switching-capability* [switching-capability encoding]
                    |  +--rw tet:switching-capability    identityref
                    |  +--rw tet:encoding                identityref
                    |  +--rw tet:max-lsp-bandwidth* [priority]
                    |     +--rw tet:priority        uint8
                    |     +--rw tet:te-bandwidth
                    |        +--rw (tet:technology)?
                    |           +--:(tet:generic)
                    |           |  +--rw tet:generic?               te-bandwidth
                    |           +--:(ethtetopo:eth)
                    |              +--rw ethtetopo:eth-bandwidth?   uint64
                    +--rw tet:label-restrictions
                    |  +--rw tet:label-restriction* [index]
                    |     +--rw tet:restriction?      enumeration
                    |     +--rw tet:index             uint32
                    |     +--rw tet:label-start
                    |     |  +--rw tet:te-label
                    |     |     +--rw (tet:technology)?
                    |     |     |  +--:(tet:generic)
                    |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
                    |     |     |  +--:(ethtetopo:eth)
                    |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
                    |     |     +--rw tet:direction?            te-label-direction
                    |     +--rw tet:label-end
                    |     |  +--rw tet:te-label
                    |     |     +--rw (tet:technology)?
                    |     |     |  +--:(tet:generic)
                    |     |     |  |  +--rw tet:generic?        rt-types:generalized-label
                    |     |     |  +--:(ethtetopo:eth)
                    |     |     |     +--rw ethtetopo:vlanid?   etht-types:vlanid
                    |     |     +--rw tet:direction?            te-label-direction
                    |     +--rw tet:label-step
                    |     |  +--rw (tet:technology)?
                    |     |     +--:(tet:generic)
                    |     |     |  +--rw tet:generic?          int32
                    |     |     +--:(ethtetopo:eth)
                    |     |        +--rw ethtetopo:eth-step?   uint16
                    |     +--rw tet:range-bitmap?     yang:hex-string
                    |     +--rw ethtetopo:tag-type?   etht-types:eth-tag-type
                    |     +--rw ethtetopo:priority?   uint8
                    +--rw tet:link-protection-type?             identityref
                    +--rw tet:max-link-bandwidth
                    |  +--rw tet:te-bandwidth
                    |     +--rw (tet:technology)?
                    |        +--:(tet:generic)
                    |        |  +--rw tet:generic?               te-bandwidth
                    |        +--:(ethtetopo:eth)
                    |           +--rw ethtetopo:eth-bandwidth?   uint64
                    +--rw tet:max-resv-link-bandwidth
                    |  +--rw tet:te-bandwidth
                    |     +--rw (tet:technology)?
                    |        +--:(tet:generic)
                    |        |  +--rw tet:generic?               te-bandwidth
                    |        +--:(ethtetopo:eth)
                    |           +--rw ethtetopo:eth-bandwidth?   uint64
                    +--rw tet:unreserved-bandwidth* [priority]
                    |  +--rw tet:priority        uint8
                    |  +--rw tet:te-bandwidth
                    |     +--rw (tet:technology)?
                    |        +--:(tet:generic)
                    |        |  +--rw tet:generic?               te-bandwidth
                    |        +--:(ethtetopo:eth)
                    |           +--rw ethtetopo:eth-bandwidth?   uint64
                    +--rw tet:te-default-metric?                uint32
                    +--rw tet:te-delay-metric?                  uint32
                    +--rw tet:te-igp-metric?                    uint32
                    +--rw tet:te-srlgs
                    |  +--rw tet:value*   te-types:srlg
                    +--rw tet:te-nsrlgs {nsrlg}?
                       +--rw tet:id*   uint32

A.2.  A topology with single microwave radio link

   Microwave is a transport technology which can be used to transport
   client services, such as L2 Ethernet links.  When an L2 link is
   transported over a single supporting microwave radio link, the
   topologies could be as shown below.  Note that the figure just shows
   an example, there might be other possibilities to demonstrate such a
   topology.  The example of the instantiation encoded in JSON is using
   only a selected subset of the leafs from the L2 topology model
   [RFC8944].

        Node N1                          Node N2
   +--------------+                 +--------------+
   | +----------+ |                 | +----------+ | L2-network
   | | L2-N1-   | |    L2-N1-N2     | |    L2-N2-| | -L2 topology
   | | TP1      o---------------------o    TP2   | |
   | +----------+ |        '        | +----------+ | Supporting
   |          :   |        '        |   :          | ' mw link
   |          :   |        '        |   :          | : TPs
   | +----------+ |        '        | +----------+ |
   | |mw-N1-    | |   mwrl-N1-N2    | |    mw-N2-| | MW-network
   | |RLTP1     o---------------------o    RLTP2 | | -MW topology
   | +----------+ |        *        | +----------+ |
   |         : :  | ******* ******* |  : :         |
   |         ::   |**             **|   ::         | Supporting
   | +-------:--+ * *             * * +--:-------+ | : TPs
   | |mw-N1- :  * | * mwc-N1-N2-A * | *  : mw-N2-| | * carriers as
   | |CTP1   :  o---------------------o  : CTP2  | |   bundled links
   | +-------:--+ | *             * | +--:-------+ |
   |         :    |*               *|    :         |
   | +----------+ *                 * +----------+ |
   | |mw-N1-    * |   mwc-N1-N2-B   | *    mw-N2-| |
   | |CTP3      o---------------------o    CTP4  | |
   | +----------+ |                 | +----------+ |
   +--------------+                 +--------------+
    L2 transported over a (2+0) microwave radio link

        Node N1                            Interfaces
   +---------------+                    +----------------+
   | +-----------+ |tp-to-interface-path| +------------+ |
   | | L2-N1-TP1 |************************|L2Interface1| |
   | +-----------+ |                    | +------------+ |
   |               |                    |                |
   | +-----------+ |tp-to-interface-path| +------------+ |
   | |mw-N1-RLTP1|************************|   RLT-1    | |
   | +-----------+ |                    | +------------+ |
   |               |                    |                |
   | +-----------+ |tp-to-interface-path| +------------+ |
   | |mw-N1-CTP1 |************************|    CT-1    | |
   | +-----------+ |                    | +------------+ |
   |               |                    |                |
   | +-----------+ |tp-to-interface-path| +------------+ |
   | |mw-N1-CTP3 |************************|    CT-3    | |
   | +-----------+ |                    | +------------+ |
   +---------------+                    +----------------+
    Topology model information to the associated interface
    management model information for Node N1

        Node N2                            Interfaces
   +---------------+                    +----------------+
   | +-----------+ |tp-to-interface-path| +------------+ |
   | | L2-N2-TP2 |************************|L2Interface2| |
   | +-----------+ |                    | +------------+ |
   |               |                    |                |
   | +-----------+ |tp-to-interface-path| +------------+ |
   | |mw-N2-RLTP2|************************|   RLT-2    | |
   | +-----------+ |                    | +------------+ |
   |               |                    |                |
   | +-----------+ |tp-to-interface-path| +------------+ |
   | |mw-N2-CTP2 |************************|    CT-2    | |
   | +-----------+ |                    | +------------+ |
   |               |                    |                |
   | +-----------+ |tp-to-interface-path| +------------+ |
   | |mw-N2-CTP4 |************************|    CT-4    | |
   | +-----------+ |                    | +------------+ |
   +---------------+                    +----------------+
    Topology model information to the associated interface
    management model information for Node N2

      The example above, a L2 network with a supporting microwave
      network, including microwave-topology (MW) and
      bandwidth-availability-topology (BWA) models as well as
      the reference to the associated interface management
      information, is encoded in JSON as follows:

   This example shows a 2+0 mode for a bonded configuration.

   <CODE BEGINS> file "example2plus0-f.json"
   =============== NOTE: '\' line wrapping per RFC 8792 ================

   {
     "ietf-network:networks": {
       "network": [
         {
           "network-id": "L2-network",
           "network-types": {
             "ietf-te-topology:te-topology": {
               "ietf-eth-te-topology:eth-tran-topology": {
               }
             }
           },
           "supporting-network": [
             {
               "network-ref": "mw-network"
             }
           ],
           "node": [
             {
               "node-id": "L2-N1",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N1"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "L2-N1-TP1",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N1",
                       "tp-ref": "mw-N1-RLTP1"
                     }
                   ]
                 }
               ]
             },
             {
               "node-id": "L2-N2",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N2"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "L2-N2-TP2",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N2",
                       "tp-ref": "mw-N2-RLTP2"
                     }
                   ]
                 }
               ]
             }
           ],
           "ietf-network-topology:link": [
             {
               "link-id": "L2-N1-N2",
               "source": {
                 "source-node": "L2-N1",
                 "source-tp": "L2-N1-TP1"
               },
               "destination": {
                 "dest-node": "L2-N2",
                 "dest-tp": "L2-N2-TP2"
               },
               "supporting-link": [
                 {
                   "network-ref": "mw-network",
                   "link-ref": "mwrl-N1-N2"
                 }
               ]
             }
           ]
         },
         {
           "network-id": "mw-network",
           "network-types": {
             "ietf-te-topology:te-topology": {
               "ietf-microwave-topology:mw-topology": {
               }
             }
           },
           "supporting-network": [
             {
               "network-ref": "mw-network"
             }
           ],
           "node": [
             {
               "node-id": "mw-N1",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N1"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "mw-N1-RLTP1",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N1",
                       "tp-ref": "mw-N1-CTP1"
                     },
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N1",
                       "tp-ref": "mw-N1-CTP3"
                     }
                   ],
                   "ietf-te-topology:te-tp-id": "10.10.10.1",
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-rltp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path":"RLT-1"
                   }
                 },
                 {
                   "tp-id": "mw-N1-CTP1",
                   "ietf-te-topology:te-tp-id": 1,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path":"CT-1"
                   }
                 },
                 {
                   "tp-id": "mw-N1-CTP3",
                   "ietf-te-topology:te-tp-id": 2,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path":"CT-3"
                   }
                 }
               ]
             },
             {
               "node-id": "mw-N2",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N2"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "mw-N2-RLTP2",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N2",
                       "tp-ref": "mw-N2-CTP2"
                     },
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N2",
                       "tp-ref": "mw-N2-CTP4"
                     }
                   ],
                   "ietf-te-topology:te-tp-id": "10.10.10.1",
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-rltp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path":"RLT-2"
                   }
                 },
                 {
                   "tp-id": "mw-N2-CTP2",
                   "ietf-te-topology:te-tp-id": 1,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path":"CT-2"
                   }
                 },
                 {
                   "tp-id": "mw-N2-CTP4",
                   "ietf-te-topology:te-tp-id": 2,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path":"CT-4"
                   }
                 }
               ]
             }
           ],
           "ietf-network-topology:link": [
             {
               "link-id": "mwrl-N1-N2",
               "source": {
                 "source-node": "mw-N1",
                 "source-tp": "mw-N1-RLTP1"
               },
               "destination": {
                 "dest-node": "mw-N2",
                 "dest-tp": "mw-N2-RLTP2"
               },
               "ietf-te-topology:te": {
                 "bundled-links": {
                   "bundled-link": [
                     {
                       "sequence": 1,
                       "src-tp-ref": "mw-N1-CTP1",
                       "des-tp-ref": "mw-N2-CTP2"
                     },
                     {
                       "sequence": 2,
                       "src-tp-ref": "mw-N1-CTP3",
                       "des-tp-ref": "mw-N2-CTP4"
                     }
                   ]
                 },
                 "te-link-attributes": {
                   "ietf-bandwidth-availability-topology:link-availabil\
   ity":
    [
                     {
                       "availability": "0.999",
                       "link-bandwidth": "1572864"
                     },
                     {
                       "availability": "0.95",
                       "link-bandwidth": "2097152"
                     }
                   ],
                   "ietf-microwave-topology:mw-link-choice": {
                     "microwave-radio-link": {
                       "rlt-mode": {
                          "num-bonded-carriers": 2,
                          "num-protecting-carriers": 0
                       }
                     }
                   }
                 }
               }
             },
             {
               "link-id": "mwc-N1-N2-A",
               "source": {
                 "source-node": "mw-N1",
                 "source-tp": "mw-N1-CTP1"
               },
               "destination": {
                 "dest-node": "mw-N2",
                 "dest-tp": "mw-N2-CTP2"
               },
               "ietf-te-topology:te": {
                 "te-link-attributes": {
                   "ietf-bandwidth-availability-topology:link-availabil\
   ity":
    [
                     {
                       "availability": "0.99",
                       "link-bandwidth": "1048576"
                     }
                   ],
                   "ietf-microwave-topology:mw-link-choice": {
                     "microwave-carrier": {
                       "tx-frequency": 10728000,
                       "rx-frequency": 10615000,
                       "channel-separation": 28000
                     }
                   }
                 }
               }
             },
             {
               "link-id": "mwc-N1-N2-B",
               "source": {
                 "source-node": "mw-N1",
                 "source-tp": "mw-N1-CTP3"
               },
               "destination": {
                 "dest-node": "mw-N2",
                 "dest-tp": "mw-N2-CTP4"
               },
               "ietf-te-topology:te": {
                 "te-link-attributes": {
                   "ietf-bandwidth-availability-topology:link-availabil\
   ity":
    [
                     {
                       "availability": "0.99",
                       "link-bandwidth": "1048576"
                     }
                   ],
                   "ietf-microwave-topology:mw-link-choice": {
                     "microwave-carrier": {
                       "tx-frequency": 10528000,
                       "rx-frequency": 10415000,
                       "channel-separation": 28000
                     }
                   }
                 }
               }
             }
           ]
         }
       ]
     },
     "ietf-interfaces:interfaces": {
       "interface": [
         {
           "name": "L2Interface1",
           "description": "'Ethernet Interface 1'",
           "type": "iana-if-type:ethernetCsmacd"
         },
         {
           "name": "L2Interface2",
           "description": "'Ethernet Interface 2'",
           "type": "iana-if-type:ethernetCsmacd"
         },
         {
           "name": "RLT-1",
           "description": "'Radio Link Terminal 1'",
           "type": "iana-if-type:microwaveRadioLinkTerminal",
           "ietf-microwave-radio-link:mode":
           "ietf-microwave-types:two-plus-zero",
           "ietf-microwave-radio-link:carrier-terminations": [
             "CT-1",
             "CT-3"
           ]
         },
         {
           "name": "RLT-2",
           "description": "'Radio Link Terminal 2'",
           "type": "iana-if-type:microwaveRadioLinkTerminal",
           "ietf-microwave-radio-link:mode":
           "ietf-microwave-types:two-plus-zero",
           "ietf-microwave-radio-link:carrier-terminations": [
             "CT-2",
             "CT-4"
           ]
         },
         {
           "name": "CT-1",
           "description": "'Carrier Termination 1'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10728000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:single": {
             "selected-cm": "ietf-microwave-types:qam-512"
           }
         },
         {
           "name": "CT-3",
           "description": "'Carrier Termination 3'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10528000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:single": {
             "selected-cm": "ietf-microwave-types:qam-512"
           }
         },
         {
           "name": "CT-2",
           "description": "'Carrier Termination 2'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10615000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:single": {
             "selected-cm": "ietf-microwave-types:qam-512"
           }
         },
         {
           "name": "CT-4",
           "description": "'Carrier Termination 4'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10415000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:single": {
             "selected-cm": "ietf-microwave-types:qam-512"
           }
         }
       ]
     }
   }
   <CODE ENDS>

   This example shows a 1+1 mode for protection.

   <CODE BEGINS> file "example1plus1-f.json"
   =============== NOTE: '\' line wrapping per RFC 8792 ================

   {
     "ietf-network:networks": {
       "network": [
         {
           "network-id": "L2-network",
           "network-types": {
             "ietf-te-topology:te-topology": {
               "ietf-eth-te-topology:eth-tran-topology": {
               }
             }
           },
           "supporting-network": [
             {
               "network-ref": "mw-network"
             }
           ],
           "node": [
             {
               "node-id": "L2-N1",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N1"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "L2-N1-TP1",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N1",
                       "tp-ref": "mw-N1-RLTP1"
                     }
                   ]
                 }
               ]
             },
             {
               "node-id": "L2-N2",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N2"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "L2-N2-TP2",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N2",
                       "tp-ref": "mw-N2-RLTP2"
                     }
                   ]
                 }
               ]
             }
           ],
           "ietf-network-topology:link": [
             {
               "link-id": "L2-N1-N2",
               "source": {
                 "source-node": "L2-N1",
                 "source-tp": "L2-N1-TP1"
               },
               "destination": {
                 "dest-node": "L2-N2",
                 "dest-tp": "L2-N2-TP2"
               },
               "supporting-link": [
                 {
                   "network-ref": "mw-network",
                   "link-ref": "mwrl-N1-N2"
                 }
               ]
             }
           ]
         },
         {
           "network-id": "mw-network",
           "network-types": {
             "ietf-te-topology:te-topology": {
               "ietf-microwave-topology:mw-topology": {
               }
             }
           },
           "supporting-network": [
             {
               "network-ref": "mw-network"
             }
           ],
           "node": [
             {
               "node-id": "mw-N1",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N1"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "mw-N1-RLTP1",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N1",
                       "tp-ref": "mw-N1-CTP1"
                     },
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N1",
                       "tp-ref": "mw-N1-CTP3"
                     }
                   ],
                   "ietf-te-topology:te-tp-id": "10.10.10.1",
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-rltp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path": "RLT-1"
                   }
                 },
                 {
                   "tp-id": "mw-N1-CTP1",
                   "ietf-te-topology:te-tp-id": 1,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path": "CT-1"
                   }
                 },
                 {
                   "tp-id": "mw-N1-CTP3",
                   "ietf-te-topology:te-tp-id": 2,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path": "CT-3"
                   }
                 }
               ]
             },
             {
               "node-id": "mw-N2",
               "supporting-node": [
                 {
                   "network-ref": "mw-network",
                   "node-ref": "mw-N2"
                 }
               ],
               "ietf-network-topology:termination-point": [
                 {
                   "tp-id": "mw-N2-RLTP2",
                   "supporting-termination-point": [
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N2",
                       "tp-ref": "mw-N2-CTP2"
                     },
                     {
                       "network-ref": "mw-network",
                       "node-ref": "mw-N2",
                       "tp-ref": "mw-N2-CTP4"
                     }
                   ],
                   "ietf-te-topology:te-tp-id": "10.10.10.1",
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-rltp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path": "RLT-2"
                   }
                 },
                 {
                   "tp-id": "mw-N2-CTP2",
                   "ietf-te-topology:te-tp-id": 1,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path": "CT-2"
                   }
                 },
                 {
                   "tp-id": "mw-N2-CTP4",
                   "ietf-te-topology:te-tp-id": 2,
                   "ietf-te-topology:te": {
                     "ietf-microwave-topology:mw-tp-choice": {
                       "microwave-ctp": {}
                     },
                     "ietf-tp-interface-reference-topology:tp-to-interf\
   ace-path": "CT-4"
                   }
                 }
               ]
             }
           ],
           "ietf-network-topology:link": [
             {
               "link-id": "mwrl-N1-N2",
               "source": {
                 "source-node": "mw-N1",
                 "source-tp": "mw-N1-RLTP1"
               },
               "destination": {
                 "dest-node": "mw-N2",
                 "dest-tp": "mw-N2-RLTP2"
               },
               "ietf-te-topology:te": {
                 "bundled-links": {
                   "bundled-link": [
                     {
                       "sequence": 1,
                       "src-tp-ref": "mw-N1-CTP1",
                       "des-tp-ref": "mw-N2-CTP2"
                     },
                     {
                       "sequence": 2,
                       "src-tp-ref": "mw-N1-CTP3",
                       "des-tp-ref": "mw-N2-CTP4"
                     }
                   ]
                 },
                 "te-link-attributes": {
                   "ietf-bandwidth-availability-topology:link-availabil\
   ity":
    [
                     {
                       "availability": "0.999",
                       "link-bandwidth": "998423"
                     },
                     {
                       "availability": "0.99",
                       "link-bandwidth": "1048576"
                     }
                   ],
                   "ietf-microwave-topology:mw-link-choice": {
                     "microwave-radio-link": {
                       "rlt-mode": {
                          "num-bonded-carriers": 1,
                          "num-protecting-carriers": 1
                       }
                     }
                   }
                 }
               }
             },
             {
               "link-id": "mwc-N1-N2-A",
               "source": {
                 "source-node": "mw-N1",
                 "source-tp": "mw-N1-CTP1"
               },
               "destination": {
                 "dest-node": "mw-N2",
                 "dest-tp": "mw-N2-CTP2"
               },
               "ietf-te-topology:te": {
                 "te-link-attributes": {
                   "ietf-bandwidth-availability-topology:link-availabil\
   ity":
    [
                     {
                       "availability": "0.99",
                       "link-bandwidth": "998423"
                     },
                     {
                       "availability": "0.95",
                       "link-bandwidth": "1048576"
                     }
                   ],
                   "ietf-microwave-topology:mw-link-choice": {
                     "microwave-carrier": {
                       "tx-frequency": 10728000,
                       "rx-frequency": 10615000,
                       "channel-separation": 28000
                     }
                   }
                 }
               }
             },
             {
               "link-id": "mwc-N1-N2-B",
               "source": {
                 "source-node": "mw-N1",
                 "source-tp": "mw-N1-CTP3"
               },
               "destination": {
                 "dest-node": "mw-N2",
                 "dest-tp": "mw-N2-CTP4"
               },
               "ietf-te-topology:te": {
                 "te-link-attributes": {
                   "ietf-bandwidth-availability-topology:link-availabil\
   ity":
    [
                     {
                       "availability": "0.99",
                       "link-bandwidth": "998423"
                     },
                     {
                       "availability": "0.95",
                       "link-bandwidth": "1048576"
                     }
                   ],
                   "ietf-microwave-topology:mw-link-choice": {
                     "microwave-carrier": {
                       "tx-frequency": 10728000,
                       "rx-frequency": 10615000,
                       "channel-separation": 28000
                     }
                   }
                 }
               }
             }
           ]
         }
       ]
     },
       "ietf-interfaces:interfaces": {
       "interface": [
         {
           "name": "L2Interface1",
           "description": "'Ethernet Interface 1'",
           "type": "iana-if-type:ethernetCsmacd"
         },
         {
           "name": "L2Interface2",
           "description": "'Ethernet Interface 2'",
           "type": "iana-if-type:ethernetCsmacd"
         },
         {
           "name": "RLT-1",
           "description": "'Radio Link Terminal 1'",
           "type": "iana-if-type:microwaveRadioLinkTerminal",
           "ietf-microwave-radio-link:mode":
      "ietf-microwave-types:one-plus-one",
           "ietf-microwave-radio-link:carrier-terminations": [
             "CT-1",
             "CT-3"
           ]
         },
         {
           "name": "RLT-2",
           "description": "'Radio Link Terminal 2'",
           "type": "iana-if-type:microwaveRadioLinkTerminal",
           "ietf-microwave-radio-link:mode":
      "ietf-microwave-types:one-plus-one",
           "ietf-microwave-radio-link:carrier-terminations": [
             "CT-2",
             "CT-4"
           ]
         },
         {
           "name": "CT-1",
           "description": "'Carrier Termination 1'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10728000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:adaptive": {
             "selected-min-acm": "ietf-microwave-types:qam-256",
             "selected-max-acm": "ietf-microwave-types:qam-512"
           }
         },
         {
           "name": "CT-3",
           "description": "'Carrier Termination 3'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10728000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:adaptive": {
             "selected-min-acm": "ietf-microwave-types:qam-256",
             "selected-max-acm": "ietf-microwave-types:qam-512"
           }
         },
         {
           "name": "CT-2",
           "description": "'Carrier Termination 2'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10615000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:adaptive": {
             "selected-min-acm": "ietf-microwave-types:qam-256",
             "selected-max-acm": "ietf-microwave-types:qam-512"
           }
         },
         {
           "name": "CT-4",
           "description": "'Carrier Termination 4'",
           "type": "iana-if-type:microwaveCarrierTermination",
           "ietf-microwave-radio-link:tx-frequency": 10615000,
           "ietf-microwave-radio-link:duplex-distance": 644000,
           "ietf-microwave-radio-link:channel-separation": 28000,
           "ietf-microwave-radio-link:rtpc": {
             "maximum-nominal-power": "20.0"
           },
           "ietf-microwave-radio-link:adaptive": {
             "selected-min-acm": "ietf-microwave-types:qam-256",
             "selected-max-acm": "ietf-microwave-types:qam-512"
           }
         }

       ]
     }
   }
   <CODE ENDS>

   Note that the examples above show one particular link
   (unidirectional) and not a complete network topology.

Authors' Addresses

   Jonas Ahlberg
   Ericsson
   Email: jonas.ahlberg@ericsson.com


   Scott Mansfield
   Ericsson
   Email: scott.mansfield@ericsson.com


   Min Ye
   Huawei Technologies
   Email: amy.yemin@huawei.com


   Italo Busi
   Huawei Technologies
   Email: italo.busi@huawei.com


   Xi Li
   NEC Laboratories Europe
   Email: xi.li@neclab.eu


   Daniela Spreafico
   Nokia - IT
   Email: daniela.spreafico@nokia.com
